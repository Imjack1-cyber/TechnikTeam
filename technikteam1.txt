========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\admin_files.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Datei- & Kategorienverwaltung" />
</c:import>

<h1>
	<i class="fas fa-folder-open"></i> Datei- & Kategorienverwaltung
</h1>
<p>Verwalten Sie hier alle hochgeladenen Dateien und deren
	Kategorien.</p>

<c:import url="../../jspf/message_banner.jspf" />

<div class="file-manager-layout">
	<div class="card file-manager-categories">
		<h2>Kategorien</h2>
		<ul class="category-list">
			<c:forEach var="cat" items="${allCategories}">
				<li data-category-id="${cat.id}"><i class="fas fa-folder"></i>
					<c:out value="${cat.name}" /></li>
			</c:forEach>
		</ul>
		<hr>
		<h4 style="margin-top: 1rem;">Kategorie-Aktionen</h4>
		<form action="<c:url value='/admin/categories/create'/>" method="post">
			<div class="form-group">
				<label for="newCategoryName">Neue Kategorie erstellen</label> <input
					type="text" name="categoryName" id="newCategoryName" required>
			</div>
			<button type="submit" class="btn">
				<i class="fas fa-plus"></i> Erstellen
			</button>
		</form>
	</div>
	<div class="file-manager-content">
		<div id="section-placeholder" class="card"
			style="text-align: center; padding: 3rem; border-style: dashed;">
			<i class="fas fa-arrow-left fa-2x"
				style="color: var(--text-muted-color); margin-bottom: 1rem;"></i>
			<p style="font-size: 1.2rem; color: var(--text-muted-color);">Bitte
				wählen Sie links eine Kategorie aus.</p>
		</div>
		<div id="dynamic-content-area"></div>
	</div>
</div>

<template id="category-section-template">
	<div class="file-category-section">
		<div class="card">
			<h2>
				<i class="fas fa-file-alt"></i> Dateien in "<span
					class="category-name"></span>"
			</h2>
			<ul class="file-list"></ul>
		</div>
		<div class="card">
			<h2>
				<i class="fas fa-upload"></i> Datei zu "<span class="category-name"></span>"
				hochladen
			</h2>
			<form action="<c:url value='/admin/files'/>" method="post"
				enctype="multipart/form-data">
				<input type="hidden" name="categoryId" class="category-id-input">
				<div class="form-group">
					<label>Datei auswählen</label><input type="file" name="file"
						class="file-input" data-max-size="20971520" required><small
						class="file-size-warning" style="color: red; display: none;">Datei
						ist zu groß! (Max. 20 MB)</small>
				</div>
				<div class="form-group">
					<label>Sichtbar für</label><select name="requiredRole"><option
							value="NUTZER" selected>Alle Nutzer</option>
						<option value="ADMIN">Nur Admins</option></select>
				</div>
				<button type="submit" class="btn">
					<i class="fas fa-cloud-upload-alt"></i> Hochladen
				</button>
			</form>
		</div>
		<div class="card">
			<h2>
				<i class="fas fa-edit"></i> Kategorie "<span class="category-name"></span>"
				verwalten
			</h2>
			<div class="category-actions-grid">
				<form action="<c:url value='/admin/categories/update'/>"
					method="post" class="category-action-form">
					<input type="hidden" name="categoryId" class="category-id-input">
					<div class="form-group">
						<label>Umbenennen</label><input type="text" name="categoryName"
							class="category-name-input" required>
					</div>
					<button type="submit" class="btn btn-small">
						<i class="fas fa-save"></i> Umbenennen
					</button>
				</form>
				<form action="<c:url value='/admin/categories/delete'/>"
					method="post" class="category-action-form js-confirm-form"
					data-confirm-message="Kategorie wirklich löschen? Zugehörige Dateien verlieren ihre Kategoriezuordnung.">
					<input type="hidden" name="categoryId" class="category-id-input">
					<div class="form-group">
						<label>Löschen</label>
						<p>
							<small>Zugehörige Dateien verlieren ihre
								Kategoriezuordnung.</small>
						</p>
					</div>
					<button type="submit" class="btn btn-small btn-danger">
						<i class="fas fa-trash-alt"></i> Endgültig Löschen
					</button>
				</form>
			</div>
		</div>
	</div>
</template>

<template id="file-item-template">
	<li>
		<div class="file-info">
			<a href="#" class="file-download-link" title="Datei herunterladen"></a>
			<small class="file-meta"></small>
		</div>
		<form action="<c:url value='/admin/files'/>" method="post"
			class="js-confirm-form"
			data-confirm-message="Datei wirklich löschen?">
			<input type="hidden" name="action" value="delete"><input
				type="hidden" name="fileId" class="file-id-input">
			<button type="submit" class="btn btn-small btn-danger-outline"
				title="Löschen">
				<i class="fas fa-trash-alt"></i>
			</button>
		</form>
	</li>
</template>

<c:import url="../../jspf/main_footer.jspf" />
<script>
document.addEventListener('DOMContentLoaded', () => {
    // Data from JSP to JS
    const groupedFiles = {
        <c:forEach var="entry" items="${groupedFiles}" varStatus="status">
            "<c:out value="${entry.key}"/>": [
                <c:forEach var="file" items="${entry.value}" varStatus="fileStatus">
                    { id: ${file.id}, filename: "${fn:replace(file.filename, '"', '\\"')}", filepath: "${fn:replace(file.filepath, '"', '\\"')}", requiredRole: "${file.requiredRole}" }
                    ${!fileStatus.last ? ',' : ''}
                </c:forEach>
            ]
            ${!status.last ? ',' : ''}
        </c:forEach>
    };

    const allCategories = [
        <c:forEach var="cat" items="${allCategories}" varStatus="status">
            { id: ${cat.id}, name: "${fn:replace(cat.name, '"', '\\"')}" }
            ${!status.last ? ',' : ''}
        </c:forEach>
    ];

    const categoryListItems = document.querySelectorAll('.category-list li');
    const dynamicContentArea = document.getElementById('dynamic-content-area');
    const placeholder = document.getElementById('section-placeholder');
    const sectionTemplate = document.getElementById('category-section-template');
    const fileItemTemplate = document.getElementById('file-item-template');
    const contextPath = "${pageContext.request.contextPath}";

    const switchCategoryView = (categoryId) => {
        dynamicContentArea.innerHTML = '';
        placeholder.style.display = 'none';
        categoryListItems.forEach(item => item.classList.remove('active'));

        if (!categoryId) {
            placeholder.style.display = 'block';
            return;
        }

        const category = allCategories.find(c => c.id == categoryId);
        if (!category) return;

        // Activate the selected category list item
        const activeLi = document.querySelector(`.category-list li[data-category-id='${categoryId}']`);
        if(activeLi) activeLi.classList.add('active');

        // Clone and populate the main section template
        const sectionClone = sectionTemplate.content.cloneNode(true);
        sectionClone.querySelectorAll('.category-name').forEach(el => el.textContent = category.name);
        sectionClone.querySelectorAll('.category-id-input').forEach(el => el.value = category.id);
        sectionClone.querySelector('.category-name-input').value = category.name;

        // Populate the file list
        const fileList = sectionClone.querySelector('.file-list');
        const filesForCategory = groupedFiles[category.name] || [];

        if (filesForCategory.length > 0) {
            filesForCategory.forEach(file => {
                const fileItemClone = fileItemTemplate.content.cloneNode(true);
                const downloadLink = fileItemClone.querySelector('.file-download-link');
                // CORRECTED LINE: Use standard string concatenation to avoid EL conflict
                downloadLink.href = contextPath + '/download?file=' + encodeURIComponent(file.filepath);
                downloadLink.textContent = file.filename;
                fileItemClone.querySelector('.file-meta').textContent = `(Sichtbar für: ${file.requiredRole})`;
                fileItemClone.querySelector('.file-id-input').value = file.id;
                
                const fileForm = fileItemClone.querySelector('form');
                fileForm.dataset.confirmMessage = `Datei '${file.filename}' wirklich löschen?`;
                fileForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    showConfirmationModal(this.dataset.confirmMessage, () => this.submit());
                });
                
                fileList.appendChild(fileItemClone);
            });
        } else {
            fileList.innerHTML = '<li style="justify-content: center; color: var(--text-muted-color);">Keine Dateien in dieser Kategorie.</li>';
        }

        dynamicContentArea.appendChild(sectionClone);
        
        // Re-attach file size validation and confirmation to the newly added forms
        attachFileSizeValidator(dynamicContentArea.querySelector('.file-input'));
        dynamicContentArea.querySelectorAll('.js-confirm-form').forEach(form => {
             form.addEventListener('submit', function(e) {
                e.preventDefault();
                showConfirmationModal(this.dataset.confirmMessage, () => this.submit());
            });
        });
    };
    
    const attachFileSizeValidator = (input) => {
        if (!input) return;
        input.addEventListener('change', (e) => {
            const file = e.target.files[0];
            const maxSize = parseInt(e.target.dataset.maxSize, 10);
            const warningElement = e.target.nextElementSibling;
            if (file && file.size > maxSize) {
                warningElement.style.display = 'block';
                e.target.value = '';
            } else {
                warningElement.style.display = 'none';
            }
        });
    };

    categoryListItems.forEach(item => {
        item.addEventListener('click', () => {
            switchCategoryView(item.dataset.categoryId);
        });
    });
    
    // Initial view
    switchCategoryView(null);
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\admin_log.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Admin Log" />
</c:import>

<h1>Admin Aktions-Protokoll</h1>

<div class="table-controls">
	<div class="form-group" style="margin-bottom: 0; flex-grow: 1;">
		<input type="search" id="table-filter"
			placeholder="Nach Details, Name oder Aktion filtern..."
			style="width: 100%;" aria-label="Protokoll filtern">
	</div>
</div>

<div class="table-wrapper">
	<table class="data-table searchable-table">
		<thead>
			<tr>
				<th>Wann</th>
				<th>Wer</th>
				<th>Aktionstyp</th>
				<th>Details</th>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="log" items="${logs}">
				<tr>
					<td><c:out value="${log.formattedActionTimestamp}" /> Uhr</td>
					<td><c:out value="${log.adminUsername}" /></td>
					<td><c:out value="${log.actionType}" /></td>
					<td><c:out value="${log.details}" /></td>
				</tr>
			</c:forEach>
		</tbody>
	</table>
</div>

<c:import url="../../jspf/table_scripts.jspf" />
<c:import url="../../jspf/main_footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\admin_matrix.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Qualifikations-Matrix" />
</c:import>

<h1>
	<i class="fas fa-th-list"></i> Qualifikations-Matrix
</h1>
<p>Klicken Sie auf eine Zelle, um die Teilnahme an einem Meeting zu
	bearbeiten. Die Kopfzeile und die Benutzerleiste bleiben beim Scrollen
	fixiert.</p>

<c:import url="../../jspf/message_banner.jspf" />

<div class="table-wrapper">
	<table class="data-table">
		<thead>
			<tr>
				<th rowspan="2" class="sticky-header sticky-col"
					style="vertical-align: middle; left: 0; z-index: 15;">Nutzer /
					Lehrgang ↓</th>
				<c:forEach var="course" items="${allCourses}">
					<th colspan="${fn:length(meetingsByCourse[course.id])}"
						class="sticky-header" style="text-align: center;"><a
						href="${pageContext.request.contextPath}/admin/courses"
						title="Vorlagen verwalten">${course.abbreviation}</a></th>
				</c:forEach>
			</tr>
			<tr>
				<c:forEach var="course" items="${allCourses}">
					<c:forEach var="meeting" items="${meetingsByCourse[course.id]}">
						<th class="sticky-header"
							style="text-align: center; min-width: 120px;"><a
							href="${pageContext.request.contextPath}/admin/meetings?courseId=${course.id}"
							title="Meetings für '${course.name}' verwalten">${meeting.name}</a>
						</th>
					</c:forEach>
				</c:forEach>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="user" items="${allUsers}">
				<tr>
					<td class="sticky-col" style="font-weight: 500; left: 0;"><a
						href="${pageContext.request.contextPath}/admin/users?action=details&id=${user.id}">${user.username}</a></td>
					<c:forEach var="course" items="${allCourses}">
						<c:forEach var="meeting" items="${meetingsByCourse[course.id]}">
							<c:set var="attendanceKey" value="${user.id}-${meeting.id}" />
							<c:set var="attendance" value="${attendanceMap[attendanceKey]}" />
							<td class="qual-cell" data-user-id="${user.id}"
								data-user-name="${user.username}"
								data-meeting-id="${meeting.id}"
								data-meeting-name="${course.name} - ${meeting.name}"
								data-attended="${not empty attendance && attendance.attended}"
								data-remarks="${not empty attendance ? attendance.remarks : ''}"
								style="text-align: center; font-weight: bold; cursor: pointer;"
								title="Klicken zum Bearbeiten"><c:choose>
									<c:when test="${not empty attendance && attendance.attended}">
										<span class="text-success" style="font-size: 1.2rem;">✔</span>
									</c:when>
									<c:otherwise>
										<span class="text-muted">-</span>
									</c:otherwise>
								</c:choose></td>
						</c:forEach>
					</c:forEach>
				</tr>
			</c:forEach>
		</tbody>
	</table>
</div>

<!-- Attendance Modal -->
<div class="modal-overlay" id="attendance-modal">
	<div class="modal-content">
		<button class="modal-close-btn">×</button>
		<h3>Teilnahme bearbeiten</h3>
		<p id="modal-title" style="font-weight: bold; margin-bottom: 1rem;"></p>
		<form action="${pageContext.request.contextPath}/admin/attendance"
			method="post">
			<input type="hidden" name="returnTo" value="matrix"> <input
				type="hidden" name="userId" id="modal-user-id"> <input
				type="hidden" name="meetingId" id="modal-meeting-id">
			<div class="form-group"
				style="display: flex; align-items: center; gap: 1rem;">
				<label for="modal-attended" style="margin-bottom: 0;">Teilgenommen:</label>
				<input type="checkbox" id="modal-attended" name="attended"
					value="true" style="width: auto; height: 1.5rem;">
			</div>
			<div class="form-group">
				<label for="modal-remarks">Bemerkungen:</label>
				<textarea name="remarks" id="modal-remarks" rows="3"></textarea>
			</div>
			<button type="submit" class="btn">
				<i class="fas fa-save"></i> Speichern
			</button>
		</form>
	</div>
</div>

<c:import url="../../jspf/main_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const modalOverlay = document.getElementById('attendance-modal');
    if (!modalOverlay) return;
    
    const modalTitle = document.getElementById('modal-title');
    const modalUserId = document.getElementById('modal-user-id');
    const modalMeetingId = document.getElementById('modal-meeting-id');
    const modalAttended = document.getElementById('modal-attended');
    const modalRemarks = document.getElementById('modal-remarks');
    const closeBtn = modalOverlay.querySelector('.modal-close-btn');

    const openModal = (cell) => {
        const userData = cell.dataset;
        modalTitle.textContent = `Nutzer: ${userData.userName} | Meeting: ${userData.meetingName}`;
        modalUserId.value = userData.userId;
        modalMeetingId.value = userData.meetingId;
        modalRemarks.value = userData.remarks;
        modalAttended.checked = (userData.attended === 'true');
        modalOverlay.classList.add('active');
    };

    const closeModal = () => modalOverlay.classList.remove('active');

    document.querySelectorAll('.qual-cell').forEach(cell => {
        cell.addEventListener('click', () => openModal(cell));
    });

    if (closeBtn) closeBtn.addEventListener('click', closeModal);
    modalOverlay.addEventListener('click', (event) => { if (event.target === modalOverlay) closeModal(); });
    document.addEventListener('keydown', (event) => { if (event.key === 'Escape' && modalOverlay.classList.contains('active')) closeModal(); });
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\admin_meeting_list.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Meetings für ${parentCourse.name}" />
</c:import>

<h1>
	Meetings für "
	<c:out value="${parentCourse.name}" />
	"
</h1>
<a href="${pageContext.request.contextPath}/admin/courses"
	style="margin-bottom: 1rem; display: inline-block;">« Zurück zu
	allen Vorlagen</a>

<c:import url="../../jspf/message_banner.jspf" />

<div class="table-controls">
	<button type="button" class="btn" id="new-meeting-btn">Neues
		Meeting planen</button>
	<div class="form-group" style="margin-bottom: 0;">
		<input type="search" id="table-filter"
			placeholder="Tabelle filtern..." aria-label="Tabelle filtern">
	</div>
</div>

<c:if test="${empty meetings}">
	<div class="card">
		<p>Für diesen Lehrgang wurden noch keine Meetings geplant.</p>
	</div>
</c:if>

<div class="desktop-table-wrapper">
	<table class="desktop-table sortable-table searchable-table">
		<thead>
			<tr>
				<th class="sortable" data-sort-type="string">Meeting-Name</th>
				<th class="sortable" data-sort-type="string">Datum & Uhrzeit</th>
				<th class="sortable" data-sort-type="string">Leitung</th>
				<th>Aktionen</th>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="meeting" items="${meetings}">
				<tr>
					<td><a
						href="${pageContext.request.contextPath}/meetings/details?id=${meeting.id}"><c:out
								value="${meeting.name}" /></a></td>
					<td><c:out value="${meeting.formattedMeetingDateTimeRange}" /></td>
					<td><c:out
							value="${empty meeting.leaderUsername ? 'N/A' : meeting.leaderUsername}" /></td>
					<td style="display: flex; gap: 0.5rem;">
						<button type="button" class="btn btn-small edit-meeting-btn"
							data-meeting-id="${meeting.id}">Bearbeiten & Anhänge</button>
						<form action="${pageContext.request.contextPath}/admin/meetings"
							method="post" class="inline-form js-confirm-form"
							data-confirm-message="Meeting '${fn:escapeXml(meeting.name)}' wirklich löschen?">
							<input type="hidden" name="action" value="delete"> <input
								type="hidden" name="courseId" value="${parentCourse.id}">
							<input type="hidden" name="meetingId" value="${meeting.id}">
							<button type="submit" class="btn btn-small btn-danger">Löschen</button>
						</form>
					</td>
				</tr>
			</c:forEach>
		</tbody>
	</table>
</div>

<!-- MODAL FOR CREATE/EDIT MEETING -->
<div class="modal-overlay" id="meeting-modal">
	<div class="modal-content" style="max-width: 700px;">
		<button class="modal-close-btn">×</button>
		<h3 id="meeting-modal-title">Meeting</h3>
		<form id="meeting-modal-form"
			action="${pageContext.request.contextPath}/admin/meetings"
			method="post" enctype="multipart/form-data">
			<input type="hidden" name="action" id="meeting-action"> <input
				type="hidden" name="courseId" value="${parentCourse.id}"> <input
				type="hidden" name="id" id="meeting-id">
			<div class="form-group">
				<label for="name-modal">Name des Meetings</label><input type="text"
					id="name-modal" name="name" required>
			</div>
			<div class="responsive-form-grid">
				<div class="form-group">
					<label for="meetingDateTime-modal">Beginn</label><input
						type="datetime-local" id="meetingDateTime-modal"
						name="meetingDateTime" required>
				</div>
				<div class="form-group">
					<label for="endDateTime-modal">Ende (optional)</label><input
						type="datetime-local" id="endDateTime-modal" name="endDateTime">
				</div>
			</div>
			<div class="responsive-form-grid">
				<div class="form-group">
					<label for="location-modal">Ort</label><input type="text"
						id="location-modal" name="location">
				</div>
				<div class="form-group">
					<label for="leader-modal">Leitende Person</label><select
						name="leaderUserId" id="leader-modal"><option value="">(Keine)</option>
						<c:forEach var="user" items="${allUsers}">
							<option value="${user.id}"><c:out
									value="${user.username}" /></option>
						</c:forEach></select>
				</div>
			</div>
			<div class="form-group">
				<label for="description-modal">Beschreibung</label>
				<textarea id="description-modal" name="description" rows="3"></textarea>
			</div>
			<div class="card"
				style="margin-top: 1rem; padding: 1rem; background-color: var(--bg-color);">
				<h4 class="card-title" style="border: none; padding: 0;">Anhänge</h4>
				<ul id="modal-attachments-list" class="details-list"
					style="margin-bottom: 1rem;"></ul>
				<div class="form-group">
					<label for="attachment-modal">Neuen Anhang hochladen</label><input
						type="file" name="attachment" id="attachment-modal"
						class="file-input" data-max-size="20971520"><small
						class="file-size-warning" style="color: red; display: none;">Datei
						ist zu groß! (Max. 20 MB)</small>
				</div>
				<div class="form-group">
					<label for="requiredRole-modal">Sichtbar für</label><select
						name="requiredRole" id="requiredRole-modal"><option
							value="NUTZER" selected>Alle Nutzer</option>
						<option value="ADMIN">Nur Admins</option></select>
				</div>
			</div>
			<button type="submit" class="btn" style="margin-top: 1.5rem;">Speichern</button>
		</form>
	</div>
</div>

<c:import url="../../jspf/table_scripts.jspf" />
<c:import url="../../jspf/main_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
	const contextPath = "${pageContext.request.contextPath}";
    // Custom confirmation for delete forms
    document.querySelectorAll('.js-confirm-form').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            const message = this.dataset.confirmMessage || 'Sind Sie sicher?';
            showConfirmationModal(message, () => this.submit());
        });
    });

    // Modal Logic
    const modal = document.getElementById('meeting-modal');
    if (!modal) return;

    const form = document.getElementById('meeting-modal-form');
    const modalTitle = document.getElementById('meeting-modal-title');
    const actionInput = document.getElementById('meeting-action');
    const idInput = document.getElementById('meeting-id');
    const attachmentsList = document.getElementById('modal-attachments-list');
    const closeModalBtn = modal.querySelector('.modal-close-btn');

    const openModal = () => modal.classList.add('active');
    const closeModal = () => modal.classList.remove('active');

    const resetModal = () => {
        form.reset();
        attachmentsList.innerHTML = '';
    };

    // Open "Create" Modal
    document.getElementById('new-meeting-btn').addEventListener('click', () => {
        resetModal();
        modalTitle.textContent = "Neues Meeting planen";
        actionInput.value = "create";
        idInput.value = "";
        openModal();
    });

    // Open "Edit" Modal
    document.querySelectorAll('.edit-meeting-btn').forEach(btn => {
        btn.addEventListener('click', async () => {
            const meetingId = btn.dataset.meetingId;
            try {
                const response = await fetch(`${contextPath}/WEB-INF/views/admin/admin_meeting_list.jsp?action=getMeetingData&id=${meetingId}`);
                if (!response.ok) throw new Error('Meeting data could not be fetched.');
                const data = await response.json();
                const meeting = data.meetingData;
                const attachments = data.attachmentsData;

                resetModal();
                modalTitle.textContent = "Meeting bearbeiten";
                actionInput.value = "update";
                idInput.value = meeting.id;
                form.querySelector('#name-modal').value = meeting.name || '';
                form.querySelector('#location-modal').value = meeting.location || '';
                form.querySelector('#meetingDateTime-modal').value = meeting.meetingDateTime ? meeting.meetingDateTime.substring(0, 16) : '';
                form.querySelector('#endDateTime-modal').value = meeting.endDateTime ? meeting.endDateTime.substring(0, 16) : '';
                form.querySelector('#leader-modal').value = meeting.leaderUserId || '';
                form.querySelector('#description-modal').value = meeting.description || '';

                if (attachments && attachments.length > 0) {
                    attachments.forEach(att => addAttachmentRow(att, meeting.courseId));
                } else {
                    attachmentsList.innerHTML = '<li>Keine Anhänge vorhanden.</li>';
                }

                openModal();
            } catch (error) {
                console.error('Error fetching meeting data:', error);
                alert('Fehler beim Laden der Meeting-Daten.');
            }
        });
    });
	
	const addAttachmentRow = (attachment, courseId) => {
		const li = document.createElement('li');
		li.id = `attachment-item-${attachment.id}`;
		li.innerHTML = `<a href="${contextPath}/download?file=${attachment.filepath}" target="_blank">${attachment.filename}</a> (Rolle: ${attachment.requiredRole})`;
		const removeBtn = document.createElement('button');
		removeBtn.type = 'button';
		removeBtn.className = 'btn btn-small btn-danger-outline';
		removeBtn.innerHTML = '&times;';
		removeBtn.onclick = () => {
			showConfirmationModal(`Anhang '${attachment.filename}' wirklich löschen?`, () => {
				const deleteForm = document.createElement('form');
				deleteForm.method = 'post';
				deleteForm.action = `${contextPath}/WEB-INF/views/admin/admin_meeting_list.jsp`;
				deleteForm.innerHTML = `
					<input type="hidden" name="action" value="deleteAttachment">
					<input type="hidden" name="attachmentId" value="${attachment.id}">
					<input type="hidden" name="courseId" value="${courseId}">
				`;
				document.body.appendChild(deleteForm);
				deleteForm.submit();
			});
		};
		li.appendChild(removeBtn);
		attachmentsList.appendChild(li);
	};

    closeModalBtn.addEventListener('click', closeModal);
    modal.addEventListener('click', e => { if (e.target === modal) closeModal(); });
    document.addEventListener('keydown', e => { if (e.key === 'Escape' && modal.classList.contains('active')) closeModal(); });
	
	document.querySelectorAll('.file-input').forEach(input => {
		input.addEventListener('change', (e) => {
			const file = e.target.files[0];
			const maxSize = parseInt(e.target.dataset.maxSize, 10);
			const warningElement = e.target.nextElementSibling;
			if (file && file.size > maxSize) {
				warningElement.style.display = 'block';
				e.target.value = '';
			} else {
				warningElement.style.display = 'none';
			}
		});
	});
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\admin_reports.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Berichte & Analysen" />
</c:import>

<h1>
	<i class="fas fa-chart-pie"></i> Berichte & Analysen
</h1>
<p>Hier finden Sie zusammengefasste Daten und Analysen über die
	Anwendungsnutzung.</p>

<div class="dashboard-grid">
	<div class="card">
		<h2 class="card-title">Event-Berichte</h2>
		<ul class="details-list">
			<li><a
				href="<c:url value='/admin/reports?report=event_participation'/>">Teilnahme-Zusammenfassung</a>
				<p class="text-muted" style="margin: 0; padding: 0;">Zeigt die
					Anzahl der Anmeldungen pro Event.</p></li>
		</ul>
	</div>
	<div class="card">
		<h2 class="card-title">Benutzer-Berichte</h2>
		<ul class="details-list">
			<li><a
				href="<c:url value='/admin/reports?report=user_activity'/>">Benutzeraktivität</a>
				<p class="text-muted" style="margin: 0; padding: 0;">Zeigt, wie
					aktiv einzelne Benutzer sind.</p></li>
		</ul>
	</div>
	<div class="card">
		<h2 class="card-title">Lager-Berichte</h2>
		<ul class="details-list">
			<li><a
				href="<c:url value='/admin/reports?report=inventory_usage'/>">Nutzungsfrequenz</a>
				<p class="text-muted" style="margin: 0; padding: 0;">Zeigt,
					welche Artikel am häufigsten entnommen werden.</p></li>
			<li><span>Gesamtwert des Lagers</span> <span
				style="font-weight: bold;"> <fmt:setLocale value="de_DE" /> <fmt:formatNumber
						value="${totalInventoryValue}" type="currency" />
			</span></li>
		</ul>
	</div>
</div>

<c:import url="../../jspf/main_footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\admin_storage_list.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Lagerverwaltung" />
</c:import>

<h1>
	<i class="fas fa-warehouse"></i> Lagerverwaltung
</h1>

<c:import url="../../jspf/message_banner.jspf" />

<div class="table-controls">
	<button type="button" class="btn btn-success" id="new-item-btn">
		<i class="fas fa-plus"></i> Neuen Artikel anlegen
	</button>
	<div class="form-group" style="margin-bottom: 0;">
		<input type="search" id="table-filter"
			placeholder="Tabelle filtern..." aria-label="Tabelle filtern">
	</div>
</div>

<div class="table-wrapper">
	<table class="data-table sortable-table searchable-table">
		<thead>
			<tr>
				<th class="sortable" data-sort-type="string">Name</th>
				<th>Bild</th>
				<th class="sortable" data-sort-type="string">Ort</th>
				<th class="sortable" data-sort-type="number">Verfügbar</th>
				<th class="sortable" data-sort-type="number">Defekt</th>
				<th>Aktionen</th>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="item" items="${storageList}">
				<tr
					class="${item.defectiveQuantity > 0 ? 'item-status-defect' : ''}">
					<td><a href="<c:url value='/storage/details?id=${item.id}'/>"><c:out
								value="${item.name}" /></a></td>
					<td style="text-align: center;"><c:if
							test="${not empty item.imagePath}">
							<button class="btn btn-small btn-info lightbox-trigger"
								data-src="${pageContext.request.contextPath}/image?file=${item.imagePath}"
								title="Bild anzeigen">
								<i class="fas fa-image"></i>
							</button>
						</c:if></td>
					<td><c:out value="${item.location}" /></td>
					<td><c:out value="${item.availableQuantity}" /></td>
					<td><c:out value="${item.defectiveQuantity}" /></td>
					<td style="display: flex; gap: 0.5rem; flex-wrap: wrap;">
						<button type="button"
							class="btn btn-small btn-warning edit-item-btn"
							data-fetch-url="<c:url value='/admin/storage?action=getItemData&id=${item.id}'/>">Bearbeiten</button>
						<c:set var="qrData">
							<c:url value="/storage/actions?id=${item.id}" />
						</c:set> <a
						href="https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${fn:escapeXml(qrData)}"
						target="_blank" class="btn btn-small btn-secondary">QR-Code</a>
						<button class="btn btn-small defect-modal-btn"
							data-item-id="${item.id}"
							data-item-name="${fn:escapeXml(item.name)}"
							data-max-qty="${item.quantity}"
							data-current-defect-qty="${item.defectiveQuantity}"
							data-current-reason="${fn:escapeXml(item.defectReason)}">Defekt</button>
						<form action="<c:url value='/admin/storage'/>" method="post"
							class="js-confirm-form"
							data-confirm-message="Artikel '${fn:escapeXml(item.name)}' wirklich löschen?">
							<input type="hidden" name="action" value="delete"> <input
								type="hidden" name="id" value="${item.id}">
							<button type="submit" class="btn btn-small btn-danger">Löschen</button>
						</form>
					</td>
				</tr>
			</c:forEach>
		</tbody>
	</table>
</div>

<div id="lightbox" class="lightbox-overlay">
	<span class="lightbox-close">×</span><img class="lightbox-content"
		id="lightbox-image">
</div>

<%@ include file="/WEB-INF/jspf/storage_modals.jspf"%>
<c:import url="../../jspf/table_scripts.jspf" />
<c:import url="../../jspf/main_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.js-confirm-form').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            const message = this.dataset.confirmMessage || 'Sind Sie sicher?';
            showConfirmationModal(message, () => this.submit());
        });
    });

    // --- Lightbox Logic ---
    const lightbox = document.getElementById('lightbox');
    if (lightbox) {
        const lightboxImage = lightbox.querySelector('img');
        const closeBtn = lightbox.querySelector('.lightbox-close');

        document.querySelectorAll('.lightbox-trigger').forEach(trigger => {
            trigger.addEventListener('click', (e) => {
                e.preventDefault();
                lightbox.style.display = 'block';
                lightboxImage.src = trigger.dataset.src;
            });
        });

        const closeLightbox = () => { lightbox.style.display = 'none'; };
        if (closeBtn) closeBtn.addEventListener('click', closeLightbox);
        lightbox.addEventListener('click', (e) => { if(e.target === lightbox) { closeLightbox(); } });
        document.addEventListener('keydown', (e) => { if (e.key === 'Escape' && lightbox.style.display === 'block') closeLightbox(); });
    }

    // --- Edit/Create Modal Logic ---
    const itemModal = document.getElementById('item-modal');
    if (itemModal) {
        const form = itemModal.querySelector('form');
        const title = itemModal.querySelector('h3');
        const actionInput = form.querySelector('input[name="action"]');
        const idInput = form.querySelector('input[name="id"]');
        const closeModalBtn = itemModal.querySelector('.modal-close-btn');

        document.getElementById('new-item-btn').addEventListener('click', () => {
            form.reset();
            title.textContent = 'Neuen Lagerartikel anlegen';
            actionInput.value = 'create';
            itemModal.classList.add('active');
        });

        document.querySelectorAll('.edit-item-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                form.reset();
                const fetchUrl = btn.dataset.fetchUrl;
                try {
                    const response = await fetch(fetchUrl);
                    if (!response.ok) throw new Error('Could not fetch item data.');
                    const itemData = await response.json();

                    title.textContent = 'Lagerartikel bearbeiten';
                    actionInput.value = 'update';
                    idInput.value = itemData.id;
                    form.querySelector('#name-modal').value = itemData.name || '';
                    form.querySelector('#location-modal').value = itemData.location || '';
                    form.querySelector('#cabinet-modal').value = itemData.cabinet || '';
                    form.querySelector('#compartment-modal').value = itemData.compartment || '';
                    form.querySelector('#quantity-modal').value = itemData.quantity;
                    form.querySelector('#maxQuantity-modal').value = itemData.maxQuantity;
                    form.querySelector('#weight_kg-modal').value = itemData.weightKg || '';
                    form.querySelector('#price_eur-modal').value = itemData.priceEur || '';
                    itemModal.classList.add('active');
                } catch (error) {
                    console.error("Failed to open edit modal:", error);
                    alert("Fehler beim Laden der Artikeldaten.");
                }
            });
        });
        closeModalBtn.addEventListener('click', () => itemModal.classList.remove('active'));
    }

    // --- Defect Modal Logic ---
    const defectModal = document.getElementById('defect-modal');
    if (defectModal) {
        const modalTitle = defectModal.querySelector('h3');
        const itemIdInput = defectModal.querySelector('#defect-item-id');
        const defectQtyInput = defectModal.querySelector('#defective_quantity');
        const reasonInput = defectModal.querySelector('#defect_reason');
        const closeModalBtn = defectModal.querySelector('.modal-close-btn');

        document.querySelectorAll('.defect-modal-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                modalTitle.textContent = `Defekt-Status für "${btn.dataset.itemName}" bearbeiten`;
                itemIdInput.value = btn.dataset.itemId;
                defectQtyInput.value = btn.dataset.currentDefectQty;
                defectQtyInput.max = btn.dataset.maxQty;
                reasonInput.value = btn.dataset.currentReason;
                defectModal.classList.add('active');
            });
        });
        closeModalBtn.addEventListener('click', () => defectModal.classList.remove('active'));
    }
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\admin_system.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Systemstatus" />
</c:import>

<h1>
	<i class="fas fa-server"></i> Systemstatus
</h1>
<p>Live-Statistiken des Servers. Die Daten werden alle 5 Sekunden
	aktualisiert.</p>

<div class="dashboard-grid">
	<div class="card">
		<h2 class="card-title">
			<i class="fas fa-microchip"></i> CPU Auslastung
		</h2>
		<div class="progress-bar-container">
			<div id="cpu-progress" class="progress-bar"></div>
		</div>
		<p id="cpu-text" class="progress-text">Lade...</p>
	</div>
	<div class="card">
		<h2 class="card-title">
			<i class="fas fa-memory"></i> Arbeitsspeicher (RAM)
		</h2>
		<div class="progress-bar-container">
			<div id="ram-progress" class="progress-bar"></div>
		</div>
		<p id="ram-text" class="progress-text">Lade...</p>
	</div>
	<div class="card">
		<h2 class="card-title">
			<i class="fas fa-hdd"></i> Festplattenspeicher
		</h2>
		<div class="progress-bar-container">
			<div id="disk-progress" class="progress-bar"></div>
		</div>
		<p id="disk-text" class="progress-text">Lade...</p>
	</div>
	<div class="card" id="battery-card" style="display: none;">
		<h2 class="card-title">
			<i class="fas fa-battery-half"></i> Akku
		</h2>
		<div class="progress-bar-container">
			<div id="battery-progress" class="progress-bar"></div>
		</div>
		<p id="battery-text" class="progress-text">Lade...</p>
	</div>
	<div class="card">
		<h2 class="card-title">
			<i class="fas fa-clock"></i> Server Uptime
		</h2>
		<p id="uptime-text"
			style="font-size: 1.5rem; font-weight: 500; color: var(--primary-color); text-align: center;">Lade...</p>
	</div>
</div>

<c:import url="../../jspf/main_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const apiUrl = "${pageContext.request.contextPath}/api/WEB-INF/views/admin/admin_system.jsp-stats";

    const cpuProgress = document.getElementById('cpu-progress');
    const cpuText = document.getElementById('cpu-text');
    const ramProgress = document.getElementById('ram-progress');
    const ramText = document.getElementById('ram-text');
    const diskProgress = document.getElementById('disk-progress');
    const diskText = document.getElementById('disk-text');
    const uptimeText = document.getElementById('uptime-text');
    const batteryCard = document.getElementById('battery-card');
    const batteryProgress = document.getElementById('battery-progress');
    const batteryText = document.getElementById('battery-text');
    
    const formatGigaBytes = (gb) => {
        if (gb === 0) return '0 GB';
        if (gb < 1) return `${(gb * 1024).toFixed(0)} MB`;
        return `${gb.toFixed(2)} GB`;
    };

    const updateUI = (stats) => {
        // CORRECTION: All formatting is done here in JavaScript, using the raw numbers from the JSON response.
        // The .toFixed() method is a JavaScript Number method, not a Java method for EL.
        
        const cpuPercent = stats.cpuLoad.toFixed(1);
        cpuProgress.style.width = cpuPercent + '%';
        cpuText.textContent = cpuPercent + '%';

        if (stats.totalMemory > 0) {
            const ramPercent = (stats.usedMemory / stats.totalMemory) * 100;
            ramProgress.style.width = ramPercent.toFixed(1) + '%';
            ramText.textContent = `${formatGigaBytes(stats.usedMemory)} / ${formatGigaBytes(stats.totalMemory)}`;
        }

        if (stats.totalDiskSpace > 0) {
            const diskPercent = (stats.usedDiskSpace / stats.totalDiskSpace) * 100;
            diskProgress.style.width = diskPercent.toFixed(1) + '%';
            diskText.textContent = `${formatGigaBytes(stats.usedDiskSpace)} / ${formatGigaBytes(stats.totalDiskSpace)}`;
        }
        
        uptimeText.textContent = stats.uptime;
        
        if (stats.batteryPercentage >= 0) {
            batteryCard.style.display = 'block';
            const batteryPercent = stats.batteryPercentage;
            batteryProgress.style.width = batteryPercent + '%';
            batteryText.textContent = batteryPercent + '%';
        } else {
            batteryCard.style.display = 'none';
        }
    };

    const fetchStats = async () => {
        try {
            const response = await fetch(apiUrl);
            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
            const data = await response.json();
            updateUI(data);
        } catch (error) {
            console.error("Could not fetch system stats:", error);
            cpuText.textContent = "Fehler";
            ramText.textContent = "Fehler";
            diskText.textContent = "Fehler";
            uptimeText.textContent = "Fehler";
        }
    };

    fetchStats();
    let intervalId = setInterval(fetchStats, 5000);
    
    // Pauses updates when the tab is not visible to save resources.
    document.addEventListener("visibilitychange", () => {
        if (document.hidden) {
            clearInterval(intervalId);
        } else {
            fetchStats(); // Fetch immediately on becoming visible again
            intervalId = setInterval(fetchStats, 5000);
        }
    });
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\admin_users.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Benutzerverwaltung" />
</c:import>

<c:set var="userPermissions" value="${sessionScope.user.permissions}" />

<h1>
	<i class="fas fa-users-cog"></i> Benutzerverwaltung
</h1>

<c:import url="../../jspf/message_banner.jspf" />

<div class="table-controls">
	<c:set var="hasPermission" value="false" />
	<c:forEach var="p" items="${userPermissions}">
		<c:if test="${p == 'USER_CREATE'}">
			<c:set var="hasPermission" value="${true}" />
		</c:if>
	</c:forEach>
	<c:if test="${hasPermission}">
		<button type="button" class="btn" id="new-user-btn">
			<i class="fas fa-user-plus"></i> Neuen Benutzer anlegen
		</button>
	</c:if>
	<div class="form-group" style="margin-bottom: 0;">
		<input type="search" id="table-filter"
			placeholder="Benutzer filtern..." aria-label="Benutzer filtern">
	</div>
</div>

<!-- Mobile Card View -->
<div class="mobile-card-list searchable-list">
	<c:forEach var="user" items="${requestScope.userList}">
		<div class="list-item-card"
			data-searchable-content="${user.username} ${user.roleName}">
			<h3 class="card-title">${user.username}</h3>
			<div class="card-row">
				<span>Rolle:</span> <span>${user.roleName}</span>
			</div>
			<div class="card-actions">
				<c:set var="hasPermission" value="false" />
				<c:forEach var="p" items="${userPermissions}">
					<c:if test="${p == 'USER_UPDATE'}">
						<c:set var="hasPermission" value="${true}" />
					</c:if>
				</c:forEach>
				<c:if test="${hasPermission}">
					<button type="button" class="btn btn-small edit-user-btn"
						data-fetch-url="<c:url value='/admin/users?action=getUserData&id=${user.id}'/>">Bearbeiten</button>
				</c:if>
				<a href="<c:url value='/admin/users?action=details&id=${user.id}'/>"
					class="btn btn-small">Details</a>
				<c:if test="${sessionScope.user.id != user.id}">
					<c:set var="hasPermission" value="false" />
					<c:forEach var="p" items="${userPermissions}">
						<c:if test="${p == 'USER_DELETE'}">
							<c:set var="hasPermission" value="${true}" />
						</c:if>
					</c:forEach>
					<c:if test="${hasPermission}">
						<form action="<c:url value='/admin/users'/>" method="post"
							class="js-confirm-form"
							data-confirm-message="Benutzer '${fn:escapeXml(user.username)}' wirklich löschen?">
							<input type="hidden" name="action" value="delete"><input
								type="hidden" name="userId" value="${user.id}">
							<button type="submit" class="btn btn-small btn-danger">Löschen</button>
						</form>
					</c:if>
				</c:if>
			</div>
		</div>
	</c:forEach>
</div>

<!-- Desktop Table View -->
<div class="desktop-table-wrapper">
	<table class="data-table sortable-table searchable-table">
		<thead>
			<tr>
				<th class="sortable" data-sort-type="number">ID</th>
				<th class="sortable" data-sort-type="string">Benutzername</th>
				<th class="sortable" data-sort-type="string">Rolle</th>
				<th>Aktionen</th>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="user" items="${requestScope.userList}">
				<tr>
					<td>${user.id}</td>
					<td>${user.username}</td>
					<td>${user.roleName}</td>
					<td style="display: flex; gap: 0.5rem; flex-wrap: wrap;"><c:set
							var="hasPermission" value="false" /> <c:forEach var="p"
							items="${userPermissions}">
							<c:if test="${p == 'USER_UPDATE'}">
								<c:set var="hasPermission" value="${true}" />
							</c:if>
						</c:forEach> <c:if test="${hasPermission}">
							<button type="button" class="btn btn-small edit-user-btn"
								data-fetch-url="<c:url value='/admin/users?action=getUserData&id=${user.id}'/>">Bearbeiten</button>
						</c:if> <a
						href="<c:url value='/admin/users?action=details&id=${user.id}'/>"
						class="btn btn-small">Details</a> <c:if
							test="${sessionScope.user.id != user.id}">
							<c:set var="hasPermission" value="false" />
							<c:forEach var="p" items="${userPermissions}">
								<c:if test="${p == 'USER_DELETE'}">
									<c:set var="hasPermission" value="${true}" />
								</c:if>
							</c:forEach>
							<c:if test="${hasPermission}">
								<form action="<c:url value='/admin/users'/>" method="post"
									class="js-confirm-form"
									data-confirm-message="Benutzer '${fn:escapeXml(user.username)}' wirklich löschen?">
									<input type="hidden" name="action" value="delete"><input
										type="hidden" name="userId" value="${user.id}">
									<button type="submit" class="btn btn-small btn-danger">Löschen</button>
								</form>
							</c:if>
							<c:set var="hasPermission" value="false" />
							<c:forEach var="p" items="${userPermissions}">
								<c:if test="${p == 'USER_PASSWORD_RESET'}">
									<c:set var="hasPermission" value="${true}" />
								</c:if>
							</c:forEach>
							<c:if test="${hasPermission}">
								<form action="<c:url value='/admin/users'/>" method="post"
									class="js-confirm-form"
									data-confirm-message="Passwort für '${fn:escapeXml(user.username)}' zurücksetzen? Das neue Passwort wird angezeigt.">
									<input type="hidden" name="action" value="resetPassword"><input
										type="hidden" name="userId" value="${user.id}">
									<button type="submit" class="btn btn-small btn-warning">Passwort
										Reset</button>
								</form>
							</c:if>
						</c:if></td>
				</tr>
			</c:forEach>
		</tbody>
	</table>
</div>

<%@ include file="/WEB-INF/jspf/user_modals.jspf"%>
<c:import url="../../jspf/table_scripts.jspf" />
<c:import url="../../jspf/main_footer.jspf" />
<script>
document.addEventListener('DOMContentLoaded', () => {
	document.querySelectorAll('.js-confirm-form').forEach(form => {
		form.addEventListener('submit', function(event) {
			event.preventDefault();
			const message = this.dataset.confirmMessage || 'Sind Sie sicher?';
			showConfirmationModal(message, () => this.submit());
		});
	});

	const passwordAlert = document.getElementById('password-reset-alert');
	if (passwordAlert) {
		const passwordElement = passwordAlert.querySelector('strong.copyable-password');
		if(passwordElement) {
			navigator.clipboard.writeText(passwordElement.textContent)
                .then(() => console.log('Password copied to clipboard'))
                .catch(err => console.error('Failed to copy password:', err));
		}
	}

	const modal = document.getElementById('user-modal');
	const form = document.getElementById('user-modal-form');
	const title = document.getElementById('user-modal-title');
	const actionInput = form.querySelector('input[name="action"]');
	const idInput = form.querySelector('input[name="userId"]');
	const usernameInput = form.querySelector('#username-modal');
	const passwordInput = form.querySelector('#password-modal');
	const passwordGroup = form.querySelector('#password-group');
	const roleInput = form.querySelector('#role-modal');
	const classYearInput = form.querySelector('#classYear-modal');
	const classNameInput = form.querySelector('#className-modal');
	const emailInput = form.querySelector('#email-modal');
	const closeModalBtn = modal.querySelector('.modal-close-btn');

	const closeModal = () => modal.classList.remove('active');

    const newUserBtn = document.getElementById('new-user-btn');
    if(newUserBtn) {
        newUserBtn.addEventListener('click', () => {
		    form.reset();
		    title.textContent = "Neuen Benutzer anlegen";
		    actionInput.value = "create";
		    idInput.value = "";
		    passwordInput.required = true;
		    passwordGroup.style.display = 'block';
            roleInput.value = "3"; // Default to NUTZER
		    modal.classList.add('active');
		    usernameInput.focus();
	    });
    }

	document.querySelectorAll('.edit-user-btn').forEach(btn => {
		btn.addEventListener('click', async () => {
			form.reset();
			const fetchUrl = btn.dataset.fetchUrl;
			try {
				const response = await fetch(fetchUrl);
				if (!response.ok) throw new Error('Could not fetch user data');
				const data = await response.json();

				title.textContent = `Benutzer bearbeiten: ${data.username}`;
				actionInput.value = "update";
				idInput.value = data.id;
				usernameInput.value = data.username || '';
				roleInput.value = data.roleId || '3';
				classYearInput.value = data.classYear || '';
				classNameInput.value = data.className || '';
                emailInput.value = data.email || '';
				passwordInput.required = false;
				passwordGroup.style.display = 'none';
				modal.classList.add('active');
			} catch (error) {
				console.error('Failed to open edit modal:', error);
				alert('Benutzerdaten konnten nicht geladen werden.');
			}
		});
	});

	closeModalBtn.addEventListener('click', closeModal);
	modal.addEventListener('click', (event) => { if (event.target === modal) closeModal(); });
	document.addEventListener('keydown', (event) => { if (event.key === 'Escape' && modal.classList.contains('active')) closeModal(); });
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\admin_user_details.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle"
		value="Benutzerdetails: ${userToView.username}" />
</c:import>

<h1>
	Benutzerdetails:
	<c:out value="${userToView.username}" />
</h1>
<a href="${pageContext.request.contextPath}/admin/users"
	style="display: inline-block; margin-bottom: 1rem;"> « Zurück zur
	Benutzerliste </a>

<c:import url="../../jspf/message_banner.jspf" />

<div class="responsive-dashboard-grid">
	<div class="card">
		<h2 class="card-title">Stammdaten</h2>
		<ul class="details-list">
			<li><strong>Benutzername:</strong> <c:out
					value="${userToView.username}" /></li>
			<li><strong>Rolle:</strong> <c:out
					value="${userToView.roleName}" /></li>
			<li><strong>Jahrgang:</strong> <c:out
					value="${userToView.classYear}" /></li>
			<li><strong>Klasse:</strong> <c:out
					value="${userToView.className}" /></li>
			<li><strong>E-Mail:</strong> <c:out
					value="${not empty userToView.email ? userToView.email : 'Nicht hinterlegt'}" /></li>
			<li><strong>Registriert seit:</strong> <c:out
					value="${userToView.formattedCreatedAt}" /> Uhr</li>
		</ul>
	</div>

	<div class="card">
		<h2 class="card-title">Event-Teilnahmehistorie</h2>
		<div class="table-wrapper"
			style="max-height: 450px; overflow-y: auto;">
			<table class="data-table">
				<thead>
					<tr>
						<th>Event</th>
						<th>Datum</th>
						<th>Status</th>
					</tr>
				</thead>
				<tbody>
					<c:if test="${empty eventHistory}">
						<tr>
							<td colspan="3" style="text-align: center;">Keine
								Event-Historie vorhanden.</td>
						</tr>
					</c:if>
					<c:forEach var="event" items="${eventHistory}">
						<tr>
							<td><a
								href="${pageContext.request.contextPath}/events/details?id=${event.id}"><c:out
										value="${event.name}" /></a></td>
							<td><c:out value="${event.formattedEventDateTime}" /> Uhr</td>
							<td><c:out value="${event.userAttendanceStatus}" /></td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
		</div>
	</div>
</div>

<style>
.details-list {
	list-style-type: none;
	padding-left: 0;
}

.details-list li {
	padding: 0.75rem 0;
	border-bottom: 1px solid var(--border-color);
	display: flex;
	justify-content: space-between;
}

.details-list li:last-child {
	border-bottom: none;
}
</style>

<c:import url="../../jspf/main_footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\admin\report_display.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Bericht: ${reportTitle}" />
</c:import>

<h1>${reportTitle}</h1>
<div class="table-controls">
	<a href="<c:url value='/admin/reports'/>" class="btn btn-secondary"><i
		class="fas fa-arrow-left"></i> Zurück zur Berichtsübersicht</a> <a
		href="?report=${param.report}&export=csv" class="btn btn-success"><i
		class="fas fa-file-csv"></i> Als CSV exportieren</a>
</div>

<div class="table-wrapper">
	<c:if test="${not empty reportData}">
		<table class="data-table">
			<thead>
				<tr>
					<c:forEach var="header" items="${reportData[0].keySet()}">
						<th><c:out value="${fn:replace(header, '_', ' ')}" /></th>
					</c:forEach>
				</tr>
			</thead>
			<tbody>
				<c:forEach var="row" items="${reportData}">
					<tr>
						<c:forEach var="key" items="${reportData[0].keySet()}">
							<td><c:out value="${row[key]}" /></td>
						</c:forEach>
					</tr>
				</c:forEach>
			</tbody>
		</table>
	</c:if>
	<c:if test="${empty reportData}">
		<p style="text-align: center; padding: 2rem;">Keine Daten für
			diesen Bericht verfügbar.</p>
	</c:if>
</div>

<c:import url="../../jspf/main_footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\auth\login.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="/WEB-INF/jspf/main_header.jspf">
	<c:param name="pageTitle" value="Anmeldung" />
	<c:param name="showNav" value="false" />
</c:import>

<div class="login-page-container">
	<div class="login-box">
		<h1>
			<i class="fas fa-bolt"></i> TechnikTeam
		</h1>
		<c:if test="${not empty errorMessage}">
			<p class="error-message">
				<c:out value="${errorMessage}" />
			</p>
		</c:if>
		<form action="<c:url value='/login'/>" method="post">
			<div class="form-group">
				<label for="username">Benutzername</label> <input type="text"
					id="username" name="username" required autocomplete="username"
					autofocus>
			</div>
			<div class="form-group">
				<label for="password">Passwort</label> <input type="password"
					id="password" name="password" required
					autocomplete="current-password">
			</div>
			<button type="submit" class="btn" style="width: 100%;">Anmelden</button>
		</form>
	</div>
</div>

<c:import url="/WEB-INF/jspf/main_footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\auth\logout.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="/WEB-INF/jspf/header.jspf">
	<c:param name="pageTitle" value="Logout" />
	<c:param name="showNav" value="false" />
</c:import>

<div style="text-align: center; margin-top: 5rem; padding: 2rem;">
	<h1>
		<c:out value="${not empty param.username ? param.username : 'Du'}" />
		, du wurdest erfolgreich ausgeloggt!
	</h1>
	<p>Du wirst in 5 Sekunden automatisch zur Login-Seite
		weitergeleitet.</p>
	<p>
		<a href="${pageContext.request.contextPath}/WEB-INF/views/auth//WEB-INF/views/auth/login.jsp">Jetzt zur
			Login-Seite</a>
	</p>
</div>

<script>
	setTimeout(function() {
		window.location.href = "${pageContext.request.contextPath}/WEB-INF/views/auth//WEB-INF/views/auth/login.jsp";
	}, 5000); // 5 seconds
</script>

<c:import url="/WEB-INF/jspf/footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\error\error400.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isErrorPage="true" isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="/WEB-INF/jspf/error_header.jspf">
	<c:param name="pageTitle" value="400 - Fehlerhafte Anfrage" />
</c:import>

<div class="error-page-container">
	<h1 class="error-code" style="color: var(--info-color);">400</h1>
	<h2>Fehlerhafte Anfrage</h2>
	<p class="error-message-text">Der Server konnte die Anfrage
		aufgrund einer fehlerhaften Syntax nicht verstehen. Das
		Protokolldroiden-System analysiert die Übertragung.</p>

	<div class="protocol-droid-console">
		<div class="droid-eye"></div>
		<pre id="droid-output"></pre>
	</div>

	<div id="redirect-container"
		style="margin-top: 1.5rem; opacity: 0; transition: opacity 0.5s;">
		<a href="javascript:history.back()" class="btn btn-secondary"> <i
			class="fas fa-arrow-left"></i> Einen Schritt zurück
		</a>
	</div>
</div>

<style>
/* Add these styles to your main CSS or keep them here */
.protocol-droid-console {
	width: 100%;
	max-width: 600px;
	background: #e9ecef;
	color: #343a40;
	border: 3px solid #adb5bd;
	border-radius: 8px;
	font-family: 'Courier New', Courier, monospace;
	position: relative;
	padding-top: 50px;
}

[data-theme="dark"] .protocol-droid-console {
	background: #212529;
	color: #ced4da;
	border-color: #495057;
}

.droid-eye {
	position: absolute;
	top: 15px;
	left: 50%;
	transform: translateX(-50%);
	width: 20px;
	height: 20px;
	background: #dc3545;
	border-radius: 50%;
	box-shadow: 0 0 10px #f87171;
	animation: eye-scan 4s linear infinite;
}

@
keyframes eye-scan { 0%, 100% {
	background: #dc3545;
}

50
%
{
background
:
#ffc107;
}
}
#droid-output {
	padding: 1rem;
	height: 200px;
	overflow-y: auto;
	text-align: left;
	white-space: pre-wrap;
	word-break: break-all;
}
</style>

<c:import url="/WEB-INF/jspf/error_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const output = document.getElementById('droid-output');
    const redirectContainer = document.getElementById('redirect-container');

    // CORRECTION: Removed the line that accessed the non-existent 'method' property.
    const lines = [
        'INITIATING DATASTREAM ANALYSIS...',
        'PACKET RECEIVED. SIZE: ${pageContext.request.contentLength > 0 ? pageContext.request.contentLength : "UNKNOWN"} BYTES.',
        'PARSING HEADER... [OK]',
        'ANALYSING PAYLOAD...',
        '    > SCANNING FOR SYNTAX VIOLATIONS...',
        '    > ERROR! UNEXPECTED TOKEN OR MALFORMED PARAMETER DETECTED.',
        '    > CORRUPTION LEVEL: MODERATE.',
        'CONCLUSION: ANFRAGE NICHT VERARBEITBAR. DATENINTEGRITÄT KOMPROMITTIERT.',
        'EMPFEHLUNG: ZURÜCKKEHREN UND ANFRAGE NEU FORMULIEREN.',
        ''
    ];

    let lineIndex = 0;
    
    function printLine() {
        if (lineIndex < lines.length) {
            const p = document.createElement('p');
            p.textContent = lines[lineIndex];
            output.appendChild(p);
            output.scrollTop = output.scrollHeight;
            lineIndex++;
            setTimeout(printLine, Math.random() * 200 + 50);
        } else {
             redirectContainer.style.opacity = '1';
        }
    }

    printLine();
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\error\error401.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isErrorPage="true" isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="/WEB-INF/jspf/error_header.jspf">
	<c:param name="pageTitle" value="401 - Nicht autorisiert" />
</c:import>

<div class="error-page-container">
	<h1 class="error-code" style="color: var(--danger-color);">401</h1>
	<h2>Nicht Autorisiert</h2>
	<p class="error-message-text">
		Für den Zugriff auf diese Ressource ist eine Authentifizierung erforderlich. Ihre Anmeldeinformationen fehlen oder sind ungültig.
	</p>

	<div class="card-scanner">
        <div class="scanner-light" id="scanner-light"></div>
        <div class="card-slot">
            <div class="card-content">
                <p>STATUS:</p>
                <h3 id="scanner-status">BEREIT</h3>
                <div class="progress-bar-container" style="height:10px; margin-top: 1rem;">
			        <div id="scanner-progress" class="progress-bar"></div>
		        </div>
            </div>
        </div>
    </div>

	<div id="redirect-container" style="margin-top: 1.5rem; opacity: 0; transition: opacity 0.5s;">
		<a href="${pageContext.request.contextPath}/WEB-INF/views/auth//WEB-INF/views/auth/login.jsp" class="btn btn-success">
			<i class="fas fa-sign-in-alt"></i> Zur Anmeldeseite
		</a>
	</div>
</div>

<style>
/* Add these styles to your main CSS or keep them here */
.card-scanner {
    width: 100%;
    max-width: 350px;
    background: #343a40;
    padding: 1.5rem;
    border-radius: 10px;
    box-shadow: inset 0 0 15px #000;
}
.scanner-light {
    height: 10px;
    background: #28a745;
    border-radius: 5px;
    margin-bottom: 1.5rem;
    box-shadow: 0 0 10px #28a745;
}
.card-slot {
    background: #161b22;
    border: 2px solid #495057;
    border-radius: 8px;
    padding: 1.5rem;
    color: #fff;
}
#scanner-status {
    color: #ffc107;
    font-size: 2rem;
    letter-spacing: 2px;
    margin: 0;
}
</style>

<c:import url="/WEB-INF/jspf/error_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const statusText = document.getElementById('scanner-status');
    const light = document.getElementById('scanner-light');
    const progress = document.getElementById('scanner-progress');
    const redirectContainer = document.getElementById('redirect-container');

    const steps = [
        { text: 'SCANNE...', color: '#ffc107', lightColor: '#ffc107', duration: 1500, progress: 50 },
        { text: 'KEINE ID', color: '#dc3545', lightColor: '#dc3545', duration: 1000, progress: 80 },
        { text: 'ZUGRIFF?', color: '#dc3545', lightColor: '#dc3545', duration: 800, progress: 100 },
        { text: 'VERWEIGERT', color: '#dc3545', lightColor: '#dc3545', duration: 2000, progress: 100 }
    ];

    let currentStep = 0;

    function runScan() {
        if(currentStep >= steps.length) {
            redirectContainer.style.opacity = '1';
            return;
        }

        const step = steps[currentStep];
        statusText.textContent = step.text;
        statusText.style.color = step.color;
        light.style.background = step.lightColor;
        light.style.boxShadow = `0 0 10px ${step.lightColor}`;
        progress.style.width = `${step.progress}%`;
        progress.style.backgroundColor = step.lightColor;

        currentStep++;
        setTimeout(runScan, step.duration);
    }

    setTimeout(runScan, 500); // Initial delay
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\error\error403.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isErrorPage="true" isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="/WEB-INF/jspf/error_header.jspf">
	<c:param name="pageTitle" value="403 - Zugriff Verweigert" />
</c:import>

<div class="error-page-container">
	<h1 class="error-code" style="color: var(--warning-color);">403</h1>
	<h2>Zugriff Verweigert</h2>
	<p class="error-message-text">Ihre Zugriffsebene ist für die
		angeforderte Ressource nicht ausreichend. Das Sicherheitsprotokoll
		wurde aktiviert.</p>

	<!-- Interactive Security Console -->
	<div class="security-console">
		<div class="console-header">
			<span>SYSTEM SECURITY DAEMON - PROTOKOLL</span>
		</div>
		<pre id="console-body"></pre>
	</div>

	<div id="redirect-container"
		style="margin-top: 1.5rem; opacity: 0; transition: opacity 0.5s;">
		<a href="${pageContext.request.contextPath}/home"
			class="btn btn-primary"> <i class="fas fa-home"></i> Zurück zur
			Startseite
		</a>
	</div>
</div>

<style>
.error-page-container {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	text-align: center;
	min-height: 70vh;
	padding: 2rem;
}

.error-code {
	font-size: 5rem;
	font-weight: 800;
	line-height: 1;
	margin: 0;
}

.error-page-container h2 {
	font-size: 1.75rem;
	border: none;
	margin: 0 0 1.5rem 0;
}

.error-message-text {
	max-width: 600px;
	font-size: 1.1rem;
	line-height: 1.6;
	margin-bottom: 2rem;
}

.security-console {
	width: 100%;
	max-width: 700px;
	background: #000;
	border-radius: 6px;
	border: 1px solid var(--warning-color);
	box-shadow: 0 0 15px rgba(255, 193, 7, 0.3);
	font-family: monospace, monospace;
}

.console-header {
	background: #333;
	padding: 8px 12px;
	border-top-left-radius: 5px;
	border-top-right-radius: 5px;
	color: var(--warning-color);
	font-weight: bold;
	text-align: left;
}

#console-body {
	padding: 1rem;
	height: 250px;
	overflow-y: auto;
	text-align: left;
	white-space: pre-wrap;
	word-break: break-all;
}

#console-body .ok {
	color: var(--success-color);
}

#console-body .fail {
	color: var(--danger-color);
}

#console-body .info {
	color: var(--info-color);
}

#console-body .warn {
	color: var(--warning-color);
}

.cursor {
	display: inline-block;
	width: 0.6em;
	background-color: var(--warning-color);
	animation: blink 1s step-end infinite;
}

@
keyframes blink { 50% {
	background-color: transparent;
}
}
</style>

<c:import url="/WEB-INF/jspf/error_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const consoleBody = document.getElementById('console-body');
    const redirectContainer = document.getElementById('redirect-container');
    const username = "${fn:escapeXml(sessionScope.user.username)}";
    const role = "${fn:escapeXml(sessionScope.user.roleName)}";
    const requestUri = "${fn:escapeXml(pageContext.errorData.requestURI)}";

    let currentLine;

    async function type(text, delay = 25) {
        for (const char of text) {
            currentLine.innerHTML += char;
            consoleBody.scrollTop = consoleBody.scrollHeight;
            await new Promise(resolve => setTimeout(resolve, delay));
        }
        currentLine.innerHTML = currentLine.innerHTML.replace('<span class="cursor"></span>', ''); // Remove cursor when line is done
        consoleBody.innerHTML += '\n'; // New line
    }
    
    async function addLine(text, className = '') {
        currentLine = document.createElement('span');
        if(className) currentLine.className = className;
        consoleBody.appendChild(currentLine);
        await type(text + ' <span class="cursor"></span>');
    }

    async function runSequence() {
        await addLine('[INFO] Eingehender Request erkannt...', 'info');
        await new Promise(resolve => setTimeout(resolve, 300));
        await addLine(`[INFO] Ziel-Ressource: ${requestUri}`, 'info');
        await new Promise(resolve => setTimeout(resolve, 400));
        await addLine('[INFO] Starte Identitäts-Scan...', 'info');
        await new Promise(resolve => setTimeout(resolve, 500));

        // CORRECTION: Added the 'ok' class to make this line green.
        await addLine(`[OK]   ... Subjekt identifiziert: "${username}"`, 'ok');

        await new Promise(resolve => setTimeout(resolve, 200));
        await addLine(`[OK]   ... Zugehörigkeit/Rolle: [${role}]`, 'ok');
        await new Promise(resolve => setTimeout(resolve, 400));
        await addLine('[WARN] Prüfe Berechtigungs-Matrix für Ziel-Ressource...', 'warn');
        await new Promise(resolve => setTimeout(resolve, 800));
        await addLine('[FAIL] >>> ZUGRIFF VERWEIGERT <<<', 'fail');
        await new Promise(resolve => setTimeout(resolve, 200));
        await addLine('[FAIL] >>> Erforderliche Berechtigung nicht im Token des Subjekts gefunden.', 'fail');
        await new Promise(resolve => setTimeout(resolve, 500));
        await addLine('[INFO] Aktion protokolliert. Sicherheits-Subsystem wird heruntergefahren.', 'info');
        
        currentLine = document.createElement('span');
        consoleBody.appendChild(currentLine);
        currentLine.innerHTML = '> <span class="cursor"></span>';

        redirectContainer.style.opacity = '1';

        setTimeout(() => {
            window.location.href = "${pageContext.request.contextPath}/home";
        }, 5000);
    }

    runSequence();
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\error\error404.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isErrorPage="true" isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="/WEB-INF/jspf/error_header.jspf">
	<c:param name="pageTitle" value="404 - Seite nicht gefunden" />
</c:import>

<div class="error-page-container">
	<h1 class="error-code">404</h1>
	<h2>Ressource nicht gefunden</h2>
	<p class="error-message-text">
		Sie haben sich im Dateisystem verirrt. Die angeforderte Ressource
		wurde nicht gefunden. <br>Das Systemprotokoll unten zeigt weitere
		Details.
	</p>

	<div class="terminal-window">
		<div class="terminal-header">
			<div class="terminal-buttons">
				<span class="term-btn close"></span><span class="term-btn min"></span><span
					class="term-btn max"></span>
			</div>
			<span>bash -- technik-team</span>
		</div>
		<div id="terminal-body"></div>
	</div>

	<div id="home-link-container"
		style="margin-top: 1.5rem; opacity: 0; transition: opacity 0.5s;">
		<a href="${pageContext.request.contextPath}/home"
			class="btn btn-primary"> <i class="fas fa-home"></i> Zurück zur
			Startseite
		</a>
	</div>
</div>

<style>
.terminal-window {
	width: 100%;
	max-width: 650px;
	background: #000;
	border-radius: 8px;
	box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
	font-family: monospace, monospace;
}

.terminal-header {
	background: #333;
	padding: 8px;
	border-top-left-radius: 8px;
	border-top-right-radius: 8px;
	display: flex;
	align-items: center;
	color: #ccc;
	font-size: 0.9em;
}

.terminal-buttons {
	display: flex;
	gap: 6px;
	margin-right: 12px;
}

.term-btn {
	display: block;
	width: 12px;
	height: 12px;
	border-radius: 50%;
}

.term-btn.close {
	background: #ff5f56;
}

.term-btn.min {
	background: #ffbd2e;
}

.term-btn.max {
	background: #27c93f;
}

#terminal-body {
	padding: 1rem;
	height: 200px;
	overflow-y: auto;
	text-align: left;
}

#terminal-body p {
	margin: 0;
	white-space: pre-wrap;
	word-break: break-all;
}

#terminal-body .prompt {
	color: var(--success-color);
}

#terminal-body .command {
	color: #fff;
}

#terminal-body .error {
	color: var(--danger-color);
}

#terminal-body .info {
	color: var(--info-color);
}

#terminal-body .link {
	color: var(--success-color);
	text-decoration: underline;
	cursor: pointer;
}

#terminal-body .cursor {
	background-color: #fff;
}
</style>

<c:import url="/WEB-INF/jspf/error_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const terminalBody = document.getElementById('terminal-body');
    const homeLinkContainer = document.getElementById('home-link-container');
    const requestUri = "${fn:escapeXml(pageContext.errorData.requestURI)}";

    async function type(text, element, delay = 50) {
        for (const char of text) {
            element.textContent += char;
            terminalBody.scrollTop = terminalBody.scrollHeight;
            await new Promise(resolve => setTimeout(resolve, delay));
        }
    }
    
    async function addLine(text, className, delay = 20) {
        const p = document.createElement('p');
        if (className) p.className = className;
        terminalBody.appendChild(p);
        await type(text, p, delay);
    }

    async function runSequence() {
        const p1 = document.createElement('p');
        terminalBody.appendChild(p1);

        const prompt1 = document.createElement('span');
        prompt1.className = 'prompt';
        await type('user@technik-team:~$ ', prompt1, 20);
        p1.appendChild(prompt1);

        const command1 = document.createElement('span');
        command1.className = 'command';
        await type('ls -l ' + requestUri, command1, 50);
        p1.appendChild(command1);

        await new Promise(resolve => setTimeout(resolve, 500));

        await addLine('ls: cannot access \'' + requestUri + '\': No such file or directory', 'error', 15);
        await new Promise(resolve => setTimeout(resolve, 800));

        await addLine('Tipp: Kehren Sie mit dem folgenden Befehl zur Startseite zurück:', 'info', 25);
        await new Promise(resolve => setTimeout(resolve, 300));
        
        const p_link = document.createElement('p');
        terminalBody.appendChild(p_link);
        
        const prompt2 = document.createElement('span');
        prompt2.className = 'prompt';
        await type('user@technik-team:~$ ', prompt2, 20);
        p_link.appendChild(prompt2);

        const homeLink = document.createElement('a');
        homeLink.href = "${pageContext.request.contextPath}/home";
        homeLink.className = 'link';
        p_link.appendChild(homeLink);
        await type('cd /home', homeLink, 80);
        
        const cursor = document.createElement('span');
        cursor.className = 'cursor';
        cursor.innerHTML = ' ';
        p_link.appendChild(cursor);

        homeLinkContainer.style.opacity = '1';
    }

    runSequence();
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\error\error500.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isErrorPage="true" isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<%--
  error500.jsp - REDESIGNED & INTERACTIVE
  
  A creative "Internal Server Error" page featuring a simulated diagnostic tool with a realistic typing effect.
--%>

<c:import url="/WEB-INF/jspf/error_header.jspf">
	<c:param name="pageTitle" value="500 - Interner Fehler" />
</c:import>

<div class="error-page-container">
	<h1 class="error-code" style="color: var(--danger-color);">500</h1>
	<h2>Systemfehler im Hauptrechner</h2>
	<p class="error-message-text">Ein unerwarteter Fehler ist
		aufgetreten und unser System ist ins Stolpern geraten. Starten Sie die
		automatische Systemdiagnose, um den Fehler zu analysieren.</p>

	<!-- Interactive Diagnostic Tool -->
	<div class="diagnostic-container">
		<button id="diagnostic-btn" class="btn btn-warning">
			<i class="fas fa-tasks"></i> Diagnose starten
		</button>
		<div id="diagnostic-output" class="diagnostic-console">
			<!-- Terminal content will be generated by script -->
		</div>
	</div>

	<a href="${pageContext.request.contextPath}/home"
		class="btn btn-primary" style="margin-top: 1.5rem;"> <i
		class="fas fa-home"></i> Flucht zur Startseite
	</a>
</div>

<%-- Hidden Debug Info --%>
<!--
    Exception Details: Request URI: ${pageContext.errorData.requestURI}, Servlet: ${pageContext.errorData.servletName}, Exception: ${pageContext.exception.message}
-->

<style>
.error-page-container {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	text-align: center;
	min-height: 70vh;
	padding: 2rem;
}

.error-code {
	font-size: 5rem;
	font-weight: 800;
	line-height: 1;
	margin: 0;
}

.error-page-container h2 {
	font-size: 1.75rem;
	border: none;
	margin-top: 0;
	margin-bottom: 1.5rem;
}

.error-message-text {
	max-width: 600px;
	font-size: 1.1rem;
	line-height: 1.6;
}

.diagnostic-container {
	width: 100%;
	max-width: 600px;
	margin-top: 2rem;
	border: 1px solid var(--border-color);
	border-radius: var(--border-radius);
	padding: 1rem;
	background: var(--bg-color);
}

.diagnostic-console {
	font-family: monospace;
	text-align: left;
	height: 220px;
	overflow-y: auto;
	background-color: #000;
	color: #0f0;
	padding: 1rem;
	margin-top: 1rem;
	border-radius: 4px;
	border: 1px solid #333;
}

.diagnostic-console p {
	margin: 0;
	white-space: pre-wrap;
}

.diagnostic-console .fail {
	color: #ff4d4d;
}

.diagnostic-console .warn {
	color: #f0b72f;
}

.diagnostic-console .ok {
	color: #56d364;
}

.diagnostic-console .info {
	color: #79c0ff;
}

.cursor {
	display: inline-block;
	width: 0.6em;
	background-color: #0f0;
	animation: blink 1s step-end infinite;
}

@
keyframes blink { 50% {
	background-color: transparent;
}
}
</style>

<c:import url="/WEB-INF/jspf/error_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const diagBtn = document.getElementById('diagnostic-btn');
    const output = document.getElementById('diagnostic-output');

    const steps = [
        { text: 'Initialisiere Diagnose-Protokoll...', type: 'info', icon: 'fas fa-cogs' },
        { text: 'Prüfe Speicher-Integrität...', type: 'info', icon: 'fas fa-memory' },
        { text: '[OK] RAM Module antworten.', type: 'ok', icon: 'fas fa-check-circle' },
        { text: 'Verbinde mit Kernel...', type: 'info', icon: 'fas fa-project-diagram' },
        { text: '[WARN] Kernel antwortet langsam. Kaffee-Level kritisch.', type: 'warn', icon: 'fas fa-exclamation-triangle' },
        { text: 'Lade KI-Logikmodule...', type: 'info', icon: 'fas fa-brain' },
        { text: '[FAIL] Logikmodul "Hamster im Laufrad" hat die Arbeit niedergelegt.', type: 'fail', icon: 'fas fa-times-circle' },
        { text: 'Versuche Workaround: Mehr Glitzer-Effekte laden...', type: 'warn', icon: 'fas fa-magic' },
        { text: '[FAIL] Glitzer-Puffer übergelaufen.', type: 'fail', icon: 'fas fa-times-circle' },
        { text: '--------------------------------', type: 'info', icon: '' },
        { text: 'Diagnose abgeschlossen. Fehler gefunden.', type: 'fail', icon: 'fas fa-skull-crossbones' }
    ];

    let isRunning = false;
    
    // Function to simulate typing text into an element
    async function typeText(element, text, delay = 20) {
        for (let i = 0; i < text.length; i++) {
            element.innerHTML += text.charAt(i);
            output.scrollTop = output.scrollHeight;
            await new Promise(resolve => setTimeout(resolve, delay));
        }
    }

    diagBtn.addEventListener('click', async () => {
        if (isRunning) return;
        
        isRunning = true;
        diagBtn.disabled = true;
        diagBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Diagnose läuft...';
        output.innerHTML = ''; // Clear previous output

        for (const step of steps) {
            const line = document.createElement('p');
            line.className = step.type;
            const iconHtml = step.icon ? `<i class="${step.icon}" style="margin-right: 8px;"></i>` : '';
            line.innerHTML = `${iconHtml}`;
            output.appendChild(line);
            
            // Type out the text for the current line
            await typeText(line, step.text);

            await new Promise(resolve => setTimeout(resolve, 300)); // Pause between lines
        }
        
        // Add final cursor
        const finalLine = document.createElement('p');
        finalLine.innerHTML = '> <span class="cursor"> </span>';
        output.appendChild(finalLine);
        output.scrollTop = output.scrollHeight;

        diagBtn.disabled = false;
        diagBtn.innerHTML = '<i class="fas fa-tasks"></i> Diagnose erneut starten';
        isRunning = false;
    });
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\error\error503.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isErrorPage="true" isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="/WEB-INF/jspf/error_header.jspf">
	<c:param name="pageTitle" value="503 - Dienst nicht verfügbar" />
</c:import>

<div class="error-page-container">
	<h1 class="error-code" style="color: #ff8c00;">503</h1>
	<h2>Dienst Nicht Verfügbar</h2>
	<p class="error-message-text">Der Server ist zurzeit überlastet
		oder wird gewartet. Bitte versuchen Sie es in Kürze erneut. Das System
		versucht einen Neustart.</p>

	<div class="reboot-console">
		<pre id="reboot-output"></pre>
		<div class="progress-bar-container"
			style="margin-top: 1rem; background: #333;">
			<div id="reboot-progress" class="progress-bar"
				style="background: var(--success-color);"></div>
		</div>
	</div>
</div>

<style>
.reboot-console {
	width: 100%;
	max-width: 700px;
	background: #000;
	color: #0f0;
	border-radius: 6px;
	font-family: monospace;
	padding: 1rem;
}

#reboot-output {
	height: 250px;
	overflow-y: hidden;
	text-align: left;
	white-space: pre-wrap;
}
</style>

<c:import url="/WEB-INF/jspf/error_footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const output = document.getElementById('reboot-output');
    const progress = document.getElementById('reboot-progress');

    const steps = [
        { text: 'System check initiated...', delay: 100, progress: 10 },
        { text: 'Checking memory modules... [OK]', delay: 300, progress: 20 },
        { text: 'Checking CPU cores... [OK]', delay: 300, progress: 30 },
        { text: 'Pinging gateway... [NO RESPONSE]', delay: 1000, progress: 40 },
        { text: 'Server overload detected. Reason: Too many requests.', delay: 500, progress: 50 },
        { text: 'Flushing request queue...', delay: 1500, progress: 70 },
        { text: 'Initializing reboot sequence...', delay: 500, progress: 80 },
        { text: 'System will be back online shortly.', delay: 1000, progress: 100 },
        { text: 'Redirecting to login page...', delay: 2000, progress: 100 }
    ];

    let stepIndex = 0;

    function runSequence() {
        if (stepIndex >= steps.length) {
            window.location.href = "${pageContext.request.contextPath}/WEB-INF/views/auth//WEB-INF/views/auth/login.jsp";
            return;
        }

        const step = steps[stepIndex];
        const p = document.createElement('p');
        p.textContent = step.text;
        output.appendChild(p);
        output.scrollTop = output.scrollHeight;

        progress.style.width = `${step.progress}%`;
        
        stepIndex++;
        setTimeout(runSequence, step.delay);
    }

    runSequence();
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\error\error_generic.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isErrorPage="true" isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="/WEB-INF/jspf/error_header.jspf">
	<c:param name="pageTitle" value="Fehler" />
</c:import>

<%-- Store the status code in a variable for easier access --%>
<c:set var="statusCode" value="${pageContext.errorData.statusCode}" />

<%-- Set a default message and then override for known codes --%>
<c:set var="errorMessage"
	value="Ein unerwarteter Fehler ist aufgetreten." />
<c:choose>
	<c:when test="${statusCode == 402}">
		<c:set var="errorMessage"
			value="Zahlung erforderlich. (Dieser Code ist für die zukünftige Verwendung reserviert.)" />
	</c:when>
	<c:when test="${statusCode == 405}">
		<c:set var="errorMessage"
			value="Methode nicht erlaubt. Die verwendete HTTP-Methode (z.B. GET, POST) ist für diese Ressource nicht zulässig." />
	</c:when>
	<c:when test="${statusCode == 406}">
		<c:set var="errorMessage"
			value="Nicht akzeptabel. Der Server kann keine Antwort generieren, die den Kriterien des Clients entspricht." />
	</c:when>
	<c:when test="${statusCode == 408}">
		<c:set var="errorMessage"
			value="Anfrage-Zeitüberschreitung. Der Server hat zu lange auf eine Antwort gewartet." />
	</c:when>
	<c:when test="${statusCode == 409}">
		<c:set var="errorMessage"
			value="Konflikt. Die Anfrage konnte wegen eines Konflikts mit dem aktuellen Zustand der Ressource nicht abgeschlossen werden." />
	</c:when>
	<c:when test="${statusCode == 410}">
		<c:set var="errorMessage"
			value="Verschwunden. Die angeforderte Ressource ist nicht mehr verfügbar und wird es auch in Zukunft nicht sein." />
	</c:when>
	<c:when test="${statusCode == 501}">
		<c:set var="errorMessage"
			value="Nicht implementiert. Der Server erkennt die Anfragemethode nicht oder kann sie nicht erfüllen." />
	</c:when>
	<c:when test="${statusCode == 502}">
		<c:set var="errorMessage"
			value="Bad Gateway. Der Server hat als Gateway oder Proxy eine ungültige Antwort vom Upstream-Server erhalten." />
	</c:when>
	<c:when test="${statusCode == 504}">
		<c:set var="errorMessage"
			value="Gateway-Zeitüberschreitung. Der Server hat als Gateway oder Proxy keine rechtzeitige Antwort erhalten." />
	</c:when>
</c:choose>

<div class="error-page-container">
	<h1 class="error-code">${statusCode}</h1>
	<h2>${errorMessage}</h2>
	<p class="error-message-text">Wenn Sie glauben, dass dies ein
		Fehler ist, kontaktieren Sie bitte den Administrator.</p>
	<a href="${pageContext.request.contextPath}/home"
		class="btn btn-primary"> <i class="fas fa-home"></i> Zurück zur
		Startseite
	</a>
</div>

<c:import url="/WEB-INF/jspf/error_footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\calendar.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="/WEB-INF/jspf/header.jspf">
	<c:param name="pageTitle" value="Kalender" />
</c:import>

<h1>
	<i class="fas fa-calendar-alt"></i> Kalender
</h1>
<p>
	Übersicht aller anstehenden Veranstaltungen und Lehrgänge. <a
		href="<c:url value='/public/calendar.ics'/>"
		class="btn btn-small btn-info" style="margin-left: 1rem;"> <i
		class="fas fa-rss"></i> Kalender abonnieren
	</a>
</p>

<div class="card">
	<div id="calendar"></div>
</div>

<link
	href='https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.css'
	rel='stylesheet' />
<script
	src='https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.js'></script>
<script
	src='https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/locales/de.js'></script>

<c:import url="../../jspf/footer.jspf" />

<script>
	document.addEventListener('DOMContentLoaded', function() {
		var calendarEl = document.getElementById('calendar');
		var calendar = new FullCalendar.Calendar(calendarEl, {
			initialView : 'dayGridMonth',
			locale : 'de',
			headerToolbar : {
				left : 'prev,next today',
				center : 'title',
				right : 'dayGridMonth,timeGridWeek,listWeek'
			},
			events : '${pageContext.request.contextPath}/api/calendar/entries',
			eventClick : function(info) {
				info.jsEvent.preventDefault(); // don't let the browser navigate
				if (info.event.url) {
					window.open(info.event.url, "_self");
				}
			}
		});
		calendar.render();
	});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\collaborative_editor.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<%--
  FIX: This page now imports the standard header and footer to be
  fully integrated into the application's UI.
--%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Gemeinsamer Editor" />
	<c:param name="navType" value="user" />
</c:import>

<h1>
	<i class="fas fa-edit"></i> Gemeinsamer Notizblock
</h1>
<p>Änderungen werden automatisch für alle Benutzer gespeichert und
	angezeigt.</p>

<div class="card">
	<textarea id="editor" class="form-group"
		style="width: 100%; height: 60vh; font-family: monospace; font-size: 16px; margin: 0; background-color: var(--surface-color);"
		placeholder="Lade Inhalt..."></textarea>
	<div id="status-indicator"
		style="text-align: right; font-style: italic; color: var(--text-muted-color); padding-top: 5px; min-height: 1.2em;"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const editor = document.getElementById('editor');
    const statusIndicator = document.getElementById('status-indicator');
    const apiUrl = "${pageContext.request.contextPath}/api/document";
    let debounceTimer;

    const saveContent = () => {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(() => {
            const content = editor.value;
            statusIndicator.textContent = 'Speichere...';
            fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'text/plain; charset=utf-8' },
                body: content
            }).then(response => {
                if (response.ok) {
                    statusIndicator.textContent = 'Gespeichert';
                } else {
                    statusIndicator.textContent = 'Fehler beim Speichern!';
                    statusIndicator.style.color = 'var(--danger-color)';
                }
            }).catch(err => {
                 statusIndicator.textContent = 'Netzwerkfehler!';
                 statusIndicator.style.color = 'var(--danger-color)';
            });
        }, 500);
    };

    const fetchContent = () => {
        fetch(apiUrl)
            .then(response => {
                if (!response.ok) throw new Error("Server response not OK");
                return response.text();
            })
            .then(newContent => {
                if (document.activeElement !== editor && editor.value !== newContent) {
                    const cursorPos = editor.selectionStart;
                    editor.value = newContent;
                    editor.selectionStart = editor.selectionEnd = cursorPos;
                }
            }).catch(err => {
                console.error("Error fetching document content:", err);
                statusIndicator.textContent = 'Fehler beim Laden!';
                statusIndicator.style.color = 'var(--danger-color)';
            });
    };
    
    editor.addEventListener('input', saveContent);

    const pollInterval = setInterval(fetchContent, 3000);
    fetchContent(); 
    
    window.addEventListener('beforeunload', () => {
        clearInterval(pollInterval);
    });
});
</script>

<c:import url="/WEB-INF/jspf/footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\dateien.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Dateien" />
	<c:param name="navType" value="user" />
</c:import>

<h1>Dateien & Dokumente</h1>

<c:if test="${empty fileData}">
	<div class="card">
		<p>Es sind keine Dateien oder Dokumente verfügbar.</p>
	</div>
</c:if>

<c:forEach var="categoryEntry" items="${fileData}">
	<div class="card">
		<h2>
			<c:out value="${categoryEntry.key}" />
		</h2>
		<ul style="list-style: none; padding-left: 0;">
			<c:forEach var="file" items="${categoryEntry.value}" varStatus="loop">
				<li
					style="padding: 0.75rem 0; ${!loop.last ? 'border-bottom: 1px solid var(--border-color);' : ''}">
					<c:choose>
						<c:when test="${file.id == -1}">
							<a href="${pageContext.request.contextPath}/editor-page"
								style="font-weight: 600;"><c:out value="${file.filename}" /></a>
						</c:when>
						<c:otherwise>
							<a
								href="${pageContext.request.contextPath}/download?file=${file.filepath}"><c:out
									value="${file.filename}" /></a>
						</c:otherwise>
					</c:choose>
				</li>
			</c:forEach>
		</ul>
	</div>
</c:forEach>

<c:import url="/WEB-INF/jspf/footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\eventDetails.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Event Details" />
</c:import>

<div class="details-container">

	<div
		style="display: flex; align-items: center; gap: 1rem; flex-wrap: wrap; margin-bottom: 0.5rem;">
		<h1>
			<c:out value="${event.name}" />
		</h1>
		<c:if test="${not empty event.status}">
			<c:set var="statusClass"
				value="${event.status == 'KOMPLETT' or event.status == 'ZUGEWIESEN' ? 'status-ok' : event.status == 'LAUFEND' ? 'status-warn' : event.status == 'ABGESCHLOSSEN' ? 'status-info' : 'status-info'}" />
			<span class="status-badge ${statusClass}"><c:out
					value="${event.status}" /></span>
		</c:if>
	</div>

	<p class="details-subtitle">
		<strong>Zeitraum:</strong>
		<c:out value="${event.formattedEventDateTimeRange}" />
		<c:if test="${not empty event.location}">
			<span style="margin-left: 1rem;"><strong>Ort:</strong> <c:out
					value="${event.location}" /></span>
		</c:if>
	</p>

	<c:if
		test="${event.status == 'LAUFEND' and (isUserAssigned or sessionScope.user.role == 'ADMIN')}">
		<div class="dashboard-grid">
			<div class="card">
				<h2 class="card-title">Aufgaben</h2>
				<c:if test="${sessionScope.user.role == 'ADMIN'}">
					<div id="admin-task-manager">
						<ul id="task-list-admin" style="list-style: none; padding: 0;">
							<c:if test="${empty event.eventTasks}">
								<li>Noch keine Aufgaben erstellt.</li>
							</c:if>
							<c:forEach var="task" items="${event.eventTasks}">
								<li id="task-item-${task.id}"
									style="display: flex; justify-content: space-between; align-items: center; padding: 0.5rem 0;">
									<div style="flex-grow: 1;">
										<strong><c:out value="${task.description}" /></strong><br>
										<small>Zugewiesen: <c:out
												value="${not empty task.assignedUsernames ? task.assignedUsernames : 'Niemand'}" />
										</small>
									</div>
									<div style="display: flex; gap: 0.5rem; flex-shrink: 0;">
										<span
											class="status-badge ${task.status == 'ERLEDIGT' ? 'status-ok' : 'status-warn'}"><c:out
												value="${task.status}" /></span>
										<button class="btn btn-small assign-task-btn"
											data-task-id="${task.id}">Zuweisen</button>
										<button class="btn btn-small btn-danger delete-task-btn"
											data-task-id="${task.id}"
											data-task-desc="${fn:escapeXml(task.description)}">×</button>
									</div>
								</li>
							</c:forEach>
						</ul>
						<form action="${pageContext.request.contextPath}/admin/tasks"
							method="post"
							style="margin-top: 1rem; border-top: 1px solid var(--border-color); padding-top: 1rem;">
							<input type="hidden" name="action" value="create"> <input
								type="hidden" name="eventId" value="${event.id}">
							<div class="form-group">
								<label for="task-description">Neue Aufgabe</label> <input
									type="text" name="description" id="task-description" required
									placeholder="z.B. Mischpult aufbauen">
							</div>
							<button type="submit" class="btn btn-small">Aufgabe
								erstellen</button>
						</form>
					</div>
				</c:if>
				<c:if test="${sessionScope.user.role != 'ADMIN'}">
					<ul id="task-list-user" style="list-style: none; padding: 0;">
						<c:if test="${empty event.eventTasks}">
							<li>Keine Aufgaben vorhanden.</li>
						</c:if>
						<c:forEach var="task" items="${event.eventTasks}">
							<c:if
								test="${fn:contains(task.assignedUsernames, sessionScope.user.username) and task.status == 'OFFEN'}">
								<li id="task-item-user-${task.id}"><label
									style="display: flex; align-items: center; gap: 0.5rem; width: 100%; cursor: pointer;">
										<input type="checkbox" class="task-checkbox"
										data-task-id="${task.id}"
										style="width: auto; height: 1.2rem; flex-shrink: 0;">
										<span><c:out value="${task.description}" /></span>
								</label></li>
							</c:if>
						</c:forEach>
					</ul>
				</c:if>
			</div>
			<div class="card">
				<h2 class="card-title">Event-Chat</h2>
				<div id="chat-box"
					style="height: 300px; overflow-y: auto; border: 1px solid var(--border-color); padding: 0.5rem; margin-bottom: 1rem; background: var(--bg-color);"></div>
				<form id="chat-form" style="display: flex; gap: 0.5rem;">
					<input type="text" id="chat-message-input" class="form-group"
						style="flex-grow: 1; margin: 0;"
						placeholder="Nachricht eingeben...">
					<button type="submit" class="btn">Senden</button>
				</form>
			</div>
		</div>
	</c:if>

	<div class="dashboard-grid">
		<div class="card">
			<h2 class="card-title">Beschreibung</h2>
			<p>
				<c:out
					value="${not empty event.description ? event.description : 'Keine Beschreibung für dieses Event vorhanden.'}" />
			</p>
		</div>
		<div class="card">
			<h2 class="card-title">Benötigter Personalbedarf</h2>
			<ul style="list-style: none; padding: 0;">
				<c:if test="${empty event.skillRequirements}">
					<li>Keine speziellen Qualifikationen benötigt.</li>
				</c:if>
				<c:forEach var="req" items="${event.skillRequirements}">
					<li><strong><c:out value="${req.courseName}" />:</strong> <c:out
							value="${req.requiredPersons}" /> Person(en) benötigt</li>
				</c:forEach>
			</ul>
		</div>
		<div class="card">
			<h2 class="card-title">Reserviertes Material</h2>
			<ul style="list-style: none; padding: 0;">
				<c:if test="${empty event.reservedItems}">
					<li>Kein Material für dieses Event reserviert.</li>
				</c:if>
				<c:forEach var="item" items="${event.reservedItems}">
					<li><c:out value="${item.name}" /> <span><c:out
								value="${item.quantity}" />x</span></li>
				</c:forEach>
			</ul>
		</div>
		<div class="card">
			<h2 class="card-title">Anhänge</h2>
			<ul style="list-style: none; padding: 0;">
				<c:if test="${empty event.attachments}">
					<li>Keine Anhänge für dieses Event vorhanden.</li>
				</c:if>
				<c:forEach var="att" items="${event.attachments}">
					<li><a
						href="${pageContext.request.contextPath}/download?file=${att.filepath}"><c:out
								value="${att.filename}" /></a></li>
				</c:forEach>
			</ul>
		</div>
	</div>

	<div class="card">
		<h2 class="card-title">Zugewiesenes Team</h2>
		<ul style="list-style: none; padding: 0;">
			<c:if test="${empty event.assignedAttendees}">
				<li>Noch kein Team zugewiesen.</li>
			</c:if>
			<c:forEach var="attendee" items="${event.assignedAttendees}">
				<li><a
					href="${pageContext.request.contextPath}/admin/users?action=details&id=${attendee.id}"><c:out
							value="${attendee.username}" /></a></li>
			</c:forEach>
		</ul>
	</div>

	<div style="margin-top: 2rem;">
		<a href="${pageContext.request.contextPath}/events" class="btn">Zurück
			zur Event-Übersicht</a>
	</div>
</div>

<div class="modal-overlay" id="assign-task-modal">
	<div class="modal-content">
		<button class="modal-close-btn">×</button>
		<h3>Aufgabe zuweisen</h3>
		<form action="${pageContext.request.contextPath}/admin/tasks"
			method="post">
			<input type="hidden" name="action" value="assign"> <input
				type="hidden" name="eventId" value="${event.id}"> <input
				type="hidden" name="taskId" id="modal-task-id">
			<div class="form-group">
				<label>Verfügbare Teammitglieder</label>
				<div id="modal-user-checkboxes"
					style="display: flex; flex-direction: column; gap: 0.5rem;">
					<c:forEach var="user" items="${assignedUsers}">
						<label><input type="checkbox" name="userIds"
							value="${user.id}"> <c:out value="${user.username}" /></label>
					</c:forEach>
				</div>
			</div>
			<button type="submit" class="btn">Zuweisung speichern</button>
		</form>
	</div>
</div>

<style>
.details-subtitle {
	font-size: 1.1rem;
	color: var(--text-muted-color);
	margin-bottom: 1.5rem;
}

.details-list li {
	padding: 0.75rem 0;
	border-bottom: 1px solid var(--border-color);
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.details-list li:last-child {
	border-bottom: none;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const contextPath = "${pageContext.request.contextPath}";
    const eventId = "${event.id}";
    const currentUserId = "${sessionScope.user.id}";
    const isAdmin = "${sessionScope.user.role}" === "ADMIN";

    if (!eventId) {
        console.error("Event ID is missing from the page model. Real-time features disabled.");
        return;
    }
    
    // --- Admin-specific JS for task management ---
    if (isAdmin) {
        const assignModal = document.getElementById('assign-task-modal');
        if (assignModal) {
            const modalTaskIdInput = document.getElementById('modal-task-id');
            const modalCloseBtn = assignModal.querySelector('.modal-close-btn');
            
            document.querySelectorAll('.assign-task-btn').forEach(btn => {
				btn.addEventListener('click', (e) => {
					const taskId = e.currentTarget.dataset.taskId;
					if(taskId) {
						modalTaskIdInput.value = taskId;
						assignModal.classList.add('active');
					}
				});
			});
            
            if(modalCloseBtn) modalCloseBtn.addEventListener('click', () => assignModal.classList.remove('active'));
            assignModal.addEventListener('click', e => { if (e.target === assignModal) assignModal.classList.remove('active'); });
        }
        
        document.querySelectorAll('.delete-task-btn').forEach(btn => {
			btn.addEventListener('click', (e) => {
				e.preventDefault();
				const button = e.currentTarget;
				const taskId = button.dataset.taskId;
				const taskDesc = button.dataset.taskDesc;
				const taskItem = document.getElementById(`task-item-${taskId}`);

				if (taskId) {
					showConfirmationModal(`Aufgabe "${taskDesc}" wirklich löschen?`, () => {
						fetch(contextPath + '/admin/tasks?taskId=' + taskId, { method: 'DELETE' })
							.then(res => {
								if (res.ok) {
									taskItem.remove();
								} else {
									alert('Löschen fehlgeschlagen!');
								}
							});
					});
				}
			});
		});
    }

    // --- User-specific JS for completing tasks ---
    document.querySelectorAll('.task-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', (e) => {
			const taskId = e.target.dataset.taskId;
            const params = new URLSearchParams({ taskId: taskId, status: e.target.checked ? 'ERLEDIGT' : 'OFFEN' });
            fetch(contextPath + '/task-action', { method: 'POST', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: params })
                .then(res => {
                    if (res.ok) {
                        if (e.target.checked) e.target.closest('li').style.display = 'none';
                    } else { e.target.checked = !e.target.checked; alert('Status konnte nicht aktualisiert werden.'); }
                }).catch(() => { e.target.checked = !e.target.checked; alert('Netzwerkfehler.'); });
        });
    });

    // --- JS for Event Chat (if present) ---
    const chatBox = document.getElementById('chat-box');
    if (chatBox) {
        const chatForm = document.getElementById('chat-form');
        const chatInput = document.getElementById('chat-message-input');
        
        const fetchMessages = () => {
            fetch(contextPath + '/api/event-chat?eventId=' + eventId)
                .then(res => {
					if (!res.ok) { throw new Error(`HTTP error! status: ${res.status}`); }
					return res.json();
				})
                .then(messages => {
                    chatBox.innerHTML = ''; 
                    if (messages && messages.length > 0) {
                        messages.forEach(msg => {
                            const p = document.createElement('p');
                            p.style.marginBottom = '0.25rem';
                            if (msg.userId == currentUserId) p.style.textAlign = 'right';
                            
                            const strong = document.createElement('strong');
                            strong.textContent = msg.username + ': ';
                            if (msg.userId == currentUserId) strong.style.color = 'var(--primary-color)';

                            p.appendChild(strong);
                            p.appendChild(document.createTextNode(msg.messageText));
                            chatBox.appendChild(p);
                        });
                    } else {
                        const p = document.createElement('p');
                        p.textContent = 'Noch keine Nachrichten.';
                        p.style.cssText = 'color:var(--text-muted-color); text-align: center; padding-top: 1rem;';
                        chatBox.appendChild(p);
                    }
                    chatBox.scrollTop = chatBox.scrollHeight;
                }).catch(error => console.error("Error fetching chat messages:", error));
        };
        
        chatForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const message = chatInput.value.trim();
            if (message) {
                const formData = new URLSearchParams({ eventId: eventId, messageText: message });
                fetch(contextPath + '/api/event-chat', { method: 'POST', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: formData })
                    .then(res => { 
                        if (res.ok) { 
                            chatInput.value = ''; 
                            fetchMessages();
                        } else { 
                            alert('Nachricht konnte nicht gesendet werden.'); 
                        } 
                    })
                    .catch(() => alert('Netzwerkfehler beim Senden.'));
            }
        });
        
        setInterval(fetchMessages, 3000);
        fetchMessages();
    }
});
</script>

<c:import url="/WEB-INF/jspf/footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\events.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Veranstaltungen" />
</c:import>

<h1>Anstehende Veranstaltungen</h1>

<c:if test="${not empty sessionScope.successMessage}">
	<p class="success-message">
		<c:out value="${sessionScope.successMessage}" />
	</p>
	<c:remove var="successMessage" scope="session" />
</c:if>
<c:if test="${not empty sessionScope.errorMessage}">
	<p class="error-message">
		<c:out value="${sessionScope.errorMessage}" />
	</p>
	<c:remove var="errorMessage" scope="session" />
</c:if>

<div class="table-controls">
	<div class="form-group" style="margin-bottom: 0; flex-grow: 1;">
		<input type="search" id="table-filter" placeholder="Events filtern..."
			style="width: 100%;" aria-label="Events filtern">
	</div>
</div>

<c:if test="${empty events}">
	<div class="card">
		<p>Für dich stehen derzeit keine Veranstaltungen an, für die du
			qualifiziert bist.</p>
	</div>
</c:if>

<div class="table-wrapper">
	<table class="data-table sortable-table searchable-table">
		<thead>
			<tr>
				<th class="sortable" data-sort-type="string">Veranstaltung</th>
				<th class="sortable" data-sort-type="date">Datum & Uhrzeit</th>
				<th class="sortable" data-sort-type="string">Dein Status</th>
				<th>Aktion</th>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="event" items="${events}">
				<tr>
					<td><a
						href="${pageContext.request.contextPath}/eventDetails?id=${event.id}"><c:out
								value="${event.name}" /></a></td>
					<td data-sort-value="${event.eventDateTime}"><c:out
							value="${event.formattedEventDateTimeRange}" /></td>
					<td><c:choose>
							<c:when test="${event.userAttendanceStatus == 'ZUGEWIESEN'}">
								<strong class="text-success">Zugewiesen</strong>
							</c:when>
							<c:when test="${event.userAttendanceStatus == 'ANGEMELDET'}">
								<span class="text-success">Angemeldet</span>
							</c:when>
							<c:when test="${event.userAttendanceStatus == 'ABGEMELDET'}">
								<span class="text-danger">Abgemeldet</span>
							</c:when>
							<c:otherwise>Offen</c:otherwise>
						</c:choose></td>
					<td><c:if test="${event.userAttendanceStatus != 'ZUGEWIESEN'}">
							<div style="display: flex; gap: 0.5rem;">
								<c:if
									test="${event.userAttendanceStatus == 'OFFEN' or event.userAttendanceStatus == 'ABGEMELDET'}">
									<button type="button"
										class="btn btn-small btn-success signup-btn"
										data-event-id="${event.id}"
										data-event-name="${fn:escapeXml(event.name)}">Anmelden</button>
								</c:if>
								<c:if test="${event.userAttendanceStatus == 'ANGEMELDET'}">
									<form action="${pageContext.request.contextPath}/event-action"
										method="post" class="js-confirm-form"
										data-confirm-message="Wirklich vom Event '${fn:escapeXml(event.name)}' abmelden?">
										<input type="hidden" name="eventId" value="${event.id}">
										<button type="submit" name="action" value="signoff"
											class="btn btn-small btn-danger">Abmelden</button>
									</form>
								</c:if>
							</div>
						</c:if></td>
				</tr>
			</c:forEach>
		</tbody>
	</table>
</div>

<!-- Signup Modal -->
<div class="modal-overlay" id="signup-modal">
	<div class="modal-content">
		<button class="modal-close-btn">×</button>
		<h3 id="signup-modal-title">Anmeldung</h3>
		<form id="signup-form"
			action="${pageContext.request.contextPath}/event-action"
			method="post">
			<input type="hidden" name="action" value="signup"> <input
				type="hidden" name="eventId" id="signup-event-id">
			<div id="custom-fields-container"></div>
			<button type="submit" class="btn btn-success"
				style="margin-top: 1rem;">Anmeldung bestätigen</button>
		</form>
	</div>
</div>

<c:import url="/WEB-INF/jspf/table-helper.jspf" />
<c:import url="/WEB-INF/jspf/footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.js-confirm-form').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            showConfirmationModal(this.dataset.confirmMessage || 'Sind Sie sicher?', () => this.submit());
        });
    });

    const signupModal = document.getElementById('signup-modal');
    const signupModalTitle = document.getElementById('signup-modal-title');
    const signupEventIdInput = document.getElementById('signup-event-id');
    const customFieldsContainer = document.getElementById('custom-fields-container');
    const closeModalBtn = signupModal.querySelector('.modal-close-btn');

    const openSignupModal = async (btn) => {
        const eventId = btn.dataset.eventId;
        const eventName = btn.dataset.eventName;

        signupModalTitle.textContent = `Anmeldung für: ${eventName}`;
        signupEventIdInput.value = eventId;
        customFieldsContainer.innerHTML = '<p>Lade Anmelde-Optionen...</p>';
        signupModal.classList.add('active');

        try {
            // We can reuse the admin API endpoint to get event data including custom fields
            const response = await fetch(`${pageContext.request.contextPath}/WEB-INF/views/WEB-INF/views/admin/admin_events_list.jsp?action=getEventData&id=${eventId}`);
            if (!response.ok) throw new Error('Could not fetch event data');
            const event = await response.json();
            
            customFieldsContainer.innerHTML = '';
            if (event.customFields && event.customFields.length > 0) {
                event.customFields.forEach(field => {
                    const fieldGroup = document.createElement('div');
                    fieldGroup.className = 'form-group';
                    let fieldHtml = `<label for="customfield_${field.id}">${field.fieldName}</label>`;
                    if (field.fieldType === 'BOOLEAN') {
                        fieldHtml += `<select name="customfield_${field.id}" id="customfield_${field.id}" class="form-group"><option value="true">Ja</option><option value="false">Nein</option></select>`;
                    } else { // TEXT
                        fieldHtml += `<input type="text" name="customfield_${field.id}" id="customfield_${field.id}" class="form-group">`;
                    }
                    fieldGroup.innerHTML = fieldHtml;
                    customFieldsContainer.appendChild(fieldGroup);
                });
            } else {
                 customFieldsContainer.innerHTML = '<p>Für dieses Event sind keine weiteren Angaben nötig.</p>';
            }
        } catch (error) {
            console.error('Failed to load custom fields:', error);
            customFieldsContainer.innerHTML = '<p class="error-message">Fehler beim Laden der Anmelde-Optionen.</p>';
        }
    };
    
    document.querySelectorAll('.signup-btn').forEach(btn => btn.addEventListener('click', () => openSignupModal(btn)));
    closeModalBtn.addEventListener('click', () => signupModal.classList.remove('active'));
    signupModal.addEventListener('click', (e) => {
        if (e.target === signupModal) signupModal.classList.remove('active');
    });
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\feedback_form.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Feedback geben" />
</c:import>

<div style="max-width: 700px; margin: auto;">
	<div class="card">
		<h1>
			Feedback für:
			<c:out value="${event.name}" />
		</h1>
		<p>Dein Feedback hilft uns, zukünftige Events zu verbessern.</p>

		<form action="${pageContext.request.contextPath}/feedback"
			method="post">
			<input type="hidden" name="action" value="submitResponse"> <input
				type="hidden" name="formId" value="${form.id}">

			<div class="form-group">
				<label>Gesamteindruck (1 = schlecht, 5 = super)</label>
				<div class="star-rating">
					<input type="radio" id="star5" name="rating" value="5" required /><label
						for="star5" title="5 Sterne"></label> <input type="radio"
						id="star4" name="rating" value="4" /><label for="star4"
						title="4 Sterne"></label> <input type="radio" id="star3"
						name="rating" value="3" /><label for="star3" title="3 Sterne"></label>
					<input type="radio" id="star2" name="rating" value="2" /><label
						for="star2" title="2 Sterne"></label> <input type="radio"
						id="star1" name="rating" value="1" /><label for="star1"
						title="1 Stern"></label>
				</div>
			</div>

			<div class="form-group">
				<label for="comments">Kommentare & Verbesserungsvorschläge</label>
				<textarea id="comments" name="comments" rows="5"></textarea>
			</div>

			<button type="submit" class="btn">Feedback absenden</button>
		</form>
	</div>
</div>

<style>
.star-rating {
	display: flex;
	flex-direction: row-reverse;
	justify-content: flex-end;
	font-size: 2em;
}

.star-rating input {
	display: none;
}

.star-rating label {
	color: #ccc;
	cursor: pointer;
	transition: color 0.2s;
}

.star-rating label:before {
	content: '★';
}

.star-rating input:checked ~ label, .star-rating:not(:checked)>label:hover,
	.star-rating:not(:checked)>label:hover ~ label {
	color: #ffc107;
}
</style>

<c:import url="/WEB-INF/jspf/footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\home.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="/WEB-INF/jspf/main_header.jspf">
	<c:param name="pageTitle" value="Home" />
</c:import>

<h1>
	Willkommen zurück,
	<c:out value="${sessionScope.user.username}" />
	!
</h1>
<c:import url="../../jspf/message_banner.jspf" />

<div class="dashboard-grid">
	<div class="card">
		<h2 class="card-title">Deine nächsten 3 Veranstaltungen</h2>
		<c:choose>
			<c:when test="${not empty upcomingEvents}">
				<ul style="list-style: none; padding-left: 0;">
					<c:forEach var="event" items="${upcomingEvents}" varStatus="loop">
						<li
							style="padding: 0.5rem 0; ${!loop.last ? 'border-bottom: 1px solid var(--border-color);' : ''}">
							<a
							href="${pageContext.request.contextPath}/events/details?id=${event.id}"><c:out
									value="${event.name}" /></a> <br> <small><c:out
									value="${event.formattedEventDateTimeRange}" /></small>
						</li>
					</c:forEach>
				</ul>
			</c:when>
			<c:otherwise>
				<p>Keine anstehenden Veranstaltungen.</p>
			</c:otherwise>
		</c:choose>
		<a href="${pageContext.request.contextPath}/events"
			class="btn btn-small" style="margin-top: 1rem;">Alle
			Veranstaltungen anzeigen</a>
	</div>
	<div class="card">
		<h2 class="card-title">Deine nächsten 3 Lehrgänge/Meetings</h2>
		<c:choose>
			<c:when test="${not empty upcomingMeetings}">
				<ul style="list-style: none; padding-left: 0;">
					<c:forEach var="meeting" items="${upcomingMeetings}"
						varStatus="loop">
						<li
							style="padding: 0.5rem 0; ${!loop.last ? 'border-bottom: 1px solid var(--border-color);' : ''}">
							<a
							href="${pageContext.request.contextPath}/meetings/details?id=${meeting.id}"><c:out
									value="${meeting.name}" /></a> <br> <small><c:out
									value="${meeting.formattedMeetingDateTimeRange}" /></small>
						</li>
					</c:forEach>
				</ul>
			</c:when>
			<c:otherwise>
				<p>Keine anstehenden Lehrgänge.</p>
			</c:otherwise>
		</c:choose>
		<a href="${pageContext.request.contextPath}/lehrgaenge"
			class="btn btn-small" style="margin-top: 1rem;">Alle Lehrgänge
			anzeigen</a>
	</div>
</div>

<c:import url="/WEB-INF/jspf/main_footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\lager.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Lager" />
</c:import>

<h1>
	<i class="fas fa-boxes"></i> Lagerübersicht
</h1>
<p>Hier finden Sie eine Übersicht aller erfassten Artikel im Lager.
	Klicken Sie auf einen Artikelnamen für Details und Verlauf.</p>

<c:if test="${not empty sessionScope.successMessage}">
	<p class="success-message">${sessionScope.successMessage}</p>
	<c:remove var="successMessage" scope="session" />
</c:if>
<c:if test="${not empty sessionScope.errorMessage}">
	<p class="error-message">${sessionScope.errorMessage}</p>
	<c:remove var="errorMessage" scope="session" />
</c:if>

<div class="table-controls">
	<div class="form-group" style="margin-bottom: 0; flex-grow: 1;">
		<input type="search" id="table-filter"
			placeholder="Alle Artikel filtern..." aria-label="Lager filtern">
	</div>
</div>

<c:if test="${empty storageData}">
	<div class="card">
		<p>Derzeit sind keine Artikel im Lager erfasst.</p>
	</div>
</c:if>

<c:forEach var="locationEntry" items="${storageData}">
	<div class="card">
		<h2>
			<i class="fas fa-map-marker-alt"></i>
			<c:out value="${locationEntry.key}" />
		</h2>
		<div class="table-wrapper">
			<table class="data-table searchable-table">
				<thead>
					<tr>
						<th>Gerät</th>
						<th>Status</th>
						<th>Inhaber</th>
						<th>Verfügbar</th>
						<th>Defekt</th>
						<th>Aktion</th>
					</tr>
				</thead>
				<tbody>
					<c:forEach var="item" items="${locationEntry.value}">
						<tr
							class="${item.defectiveQuantity > 0 ? 'item-status-defect' : ''}">
							<td><a href="<c:url value='/storage-item?id=${item.id}'/>"
								title="Details für ${item.name} ansehen"><c:out
										value="${item.name}" /></a></td>
							<td><c:choose>
									<c:when test="${item.status == 'CHECKED_OUT'}">
										<span class="status-badge status-warn">Entnommen</span>
									</c:when>
									<c:when test="${item.status == 'MAINTENANCE'}">
										<span class="status-badge status-info">Wartung</span>
									</c:when>
									<c:otherwise>
										<span class="status-badge status-ok">Im Lager</span>
									</c:otherwise>
								</c:choose></td>
							<td><c:out
									value="${not empty item.currentHolderUsername ? item.currentHolderUsername : '-'}" /></td>
							<td>${item.availableQuantity}/ ${item.quantity}</td>
							<td>${item.defectiveQuantity}</td>
							<td>
								<button class="btn btn-small transaction-btn btn-primary"
									data-item-id="${item.id}"
									data-item-name="${fn:escapeXml(item.name)}"
									data-max-qty="${item.availableQuantity}"
									${item.availableQuantity <= 0 && item.status != 'CHECKED_OUT' ? 'disabled' : ''}>
									Aktion</button>
							</td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
		</div>
	</div>
</c:forEach>

<%@ include file="/WEB-INF/jspf/storage_modals.jspf"%>
<c:import url="/WEB-INF/jspf/table-helper.jspf" />
<c:import url="/WEB-INF/jspf/footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const transactionModal = document.getElementById('transaction-modal');
    if (transactionModal) {
        const modalTitle = document.getElementById('transaction-modal-title');
        const modalItemId = document.getElementById('transaction-item-id');
        const closeModalBtn = transactionModal.querySelector('.modal-close-btn');

        const openModal = (btn) => {
            modalTitle.textContent = `${btn.dataset.itemName}: Entnehmen / Einräumen`;
            modalItemId.value = btn.dataset.itemId;
            transactionModal.classList.add('active');
        };

        const closeModal = () => transactionModal.classList.remove('active');
        document.querySelectorAll('.transaction-btn').forEach(btn => btn.addEventListener('click', () => openModal(btn)));
        closeModalBtn.addEventListener('click', closeModal);
        transactionModal.addEventListener('click', e => { if (e.target === transactionModal) closeModal(); });
    }
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\lehrgaenge.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Lehrgänge" />
	<c:param name="navType" value="user" />
</c:import>

<h1>Anstehende Lehrgänge & Meetings</h1>

<c:if test="${not empty sessionScope.successMessage}">
	<p class="success-message">
		<c:out value="${sessionScope.successMessage}" />
	</p>
	<c:remove var="successMessage" scope="session" />
</c:if>
<c:if test="${not empty sessionScope.errorMessage}">
	<p class="error-message">
		<c:out value="${sessionScope.errorMessage}" />
	</p>
	<c:remove var="errorMessage" scope="session" />
</c:if>

<div class="table-controls">
	<div class="form-group" style="margin-bottom: 0; flex-grow: 1;">
		<input type="search" id="table-filter"
			placeholder="Lehrgänge filtern..." style="width: 100%;"
			aria-label="Lehrgänge filtern">
	</div>
</div>

<c:if test="${empty meetings}">
	<div class="card">
		<p>Derzeit stehen keine Lehrgänge oder Meetings an.</p>
	</div>
</c:if>

<div class="table-wrapper">
	<table class="data-table sortable-table searchable-table">
		<thead>
			<tr>
				<th class="sortable" data-sort-type="string">Meeting</th>
				<th class="sortable" data-sort-type="string">Gehört zu Kurs</th>
				<th class="sortable" data-sort-type="date">Datum & Uhrzeit</th>
				<th class="sortable" data-sort-type="string">Dein Status</th>
				<th>Aktion</th>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="meeting" items="${meetings}">
				<tr>
					<td><a
						href="${pageContext.request.contextPath}/meetingDetails?id=${meeting.id}"><c:out
								value="${meeting.name}" /></a></td>
					<td><c:out value="${meeting.parentCourseName}" /></td>
					<td data-sort-value="${meeting.meetingDateTime}"><c:out
							value="${meeting.formattedMeetingDateTimeRange}" /></td>
					<td><c:choose>
							<c:when test="${meeting.userAttendanceStatus == 'ANGEMELDET'}">
								<span style="color: var(--success-color);">Angemeldet</span>
							</c:when>
							<c:when test="${meeting.userAttendanceStatus == 'ABGEMELDET'}">
								<span style="color: var(--danger-color);">Abgemeldet</span>
							</c:when>
							<c:otherwise>Offen</c:otherwise>
						</c:choose></td>
					<td>
						<form action="${pageContext.request.contextPath}/meeting-action"
							method="post" style="display: flex; gap: 0.5rem;">
							<input type="hidden" name="meetingId" value="${meeting.id}">
							<c:if test="${meeting.userAttendanceStatus != 'ANGEMELDET'}">
								<button type="submit" name="action" value="signup"
									class="btn btn-small btn-success">Anmelden</button>
							</c:if>
							<c:if test="${meeting.userAttendanceStatus == 'ANGEMELDET'}">
								<button type="submit" name="action" value="signoff"
									class="btn btn-small btn-danger">Abmelden</button>
							</c:if>
						</form>
					</td>
				</tr>
			</c:forEach>
		</tbody>
	</table>
</div>

<c:import url="/WEB-INF/jspf/table-helper.jspf" />
<c:import url="/WEB-INF/jspf/footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\meetingDetails.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Meeting-Details" />
	<c:param name="navType" value="user" />
</c:import>

<div style="max-width: 800px; margin: 0 auto;">
	<h1>
		<c:out value="${meeting.name}" />
	</h1>
	<p
		style="color: var(--text-muted-color); margin-top: -1rem; margin-bottom: 2rem;">
		Teil des Lehrgangs: <strong><c:out
				value="${meeting.parentCourseName}" /></strong>
	</p>

	<div class="card">
		<h2>Details</h2>
		<ul style="list-style: none; padding: 0;">
			<li
				style="padding: 0.75rem 0; border-bottom: 1px solid var(--border-color); display: flex; justify-content: space-between;"><strong>Termin:</strong>
				<c:out value="${meeting.formattedMeetingDateTimeRange}" /></li>
			<li
				style="padding: 0.75rem 0; border-bottom: 1px solid var(--border-color); display: flex; justify-content: space-between;"><strong>Ort:</strong>
				<c:out
					value="${not empty meeting.location ? meeting.location : 'N/A'}" /></li>
			<li
				style="padding: 0.75rem 0; display: flex; justify-content: space-between;"><strong>Leitung:</strong>
				<c:out
					value="${not empty meeting.leaderUsername ? meeting.leaderUsername : 'N/A'}" /></li>
		</ul>
	</div>

	<div class="card">
		<h2>Beschreibung</h2>
		<p>
			<c:out
				value="${not empty meeting.description ? meeting.description : 'Keine Beschreibung vorhanden.'}" />
		</p>
	</div>

	<div class="card">
		<h2>Anhänge</h2>
		<c:choose>
			<c:when test="${not empty attachments}">
				<ul style="list-style: none; padding: 0;">
					<c:forEach var="att" items="${attachments}">
						<li
							style="padding: 0.75rem 0; border-bottom: 1px solid var(--border-color); display: flex; justify-content: space-between; align-items: center;"><a
							href="${pageContext.request.contextPath}/download?file=${att.filepath}"><c:out
									value="${att.filename}" /></a> <c:if
								test="${sessionScope.user.role == 'ADMIN'}">
								<small
									style="color: var(--text-muted-color); margin-left: 1rem;">(Sichtbar
									für: <c:out value="${att.requiredRole}" />)
								</small>
							</c:if></li>
					</c:forEach>
				</ul>
			</c:when>
			<c:otherwise>
				<p>Für dieses Meeting gibt es keine Anhänge.</p>
			</c:otherwise>
		</c:choose>
	</div>

	<a href="${pageContext.request.contextPath}/lehrgaenge" class="btn"
		style="margin-top: 1rem;"> « Zurück zur Übersicht </a>
</div>

<c:import url="/WEB-INF/jspf/footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\passwort.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Passwort ändern" />
	<c:param name="navType" value="user" />
</c:import>

<div style="max-width: 600px; margin: auto;">
	<div class="card">
		<h1>Passwort ändern</h1>

		<c:if test="${not empty successMessage}">
			<p class="success-message">
				<c:out value="${successMessage}" />
			</p>
		</c:if>
		<c:if test="${not empty errorMessage}">
			<p class="error-message">
				<c:out value="${errorMessage}" />
			</p>
		</c:if>

		<form action="${pageContext.request.contextPath}/passwort"
			method="post">
			<div class="form-group">
				<label for="currentPassword">Aktuelles Passwort</label> <input
					type="password" id="currentPassword" name="currentPassword"
					required autocomplete="current-password">
			</div>
			<div class="form-group">
				<label for="newPassword">Neues Passwort</label> <input
					type="password" id="newPassword" name="newPassword" required
					autocomplete="new-password">
			</div>
			<div class="form-group">
				<label for="confirmPassword">Neues Passwort bestätigen</label> <input
					type="password" id="confirmPassword" name="confirmPassword"
					required autocomplete="new-password">
			</div>
			<button type="submit" class="btn">Passwort speichern</button>
		</form>
	</div>
</div>

<c:import url="/WEB-INF/jspf/footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\profile.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/main_header.jspf">
	<c:param name="pageTitle" value="Mein Profil" />
</c:import>

<h1>Mein Profil</h1>
<p>Hier finden Sie eine Übersicht Ihrer Daten, Qualifikationen und
	Aktivitäten.</p>

<c:import url="../../jspf/message_banner.jspf" />

<div class="responsive-dashboard-grid">
	<div class="card">
		<h2 class="card-title">Stammdaten</h2>
		<ul class="details-list">
			<li><strong>Benutzername:</strong> <c:out
					value="${sessionScope.user.username}" /></li>
			<li><strong>Rolle:</strong> <c:out
					value="${sessionScope.user.roleName}" /></li>
			<li><strong>Jahrgang:</strong> <c:out
					value="${sessionScope.user.classYear}" /></li>
			<li><strong>Klasse:</strong> <c:out
					value="${sessionScope.user.className}" /></li>
			<li><strong>E-Mail:</strong> <c:out
					value="${not empty sessionScope.user.email ? sessionScope.user.email : 'Nicht hinterlegt'}" /></li>
		</ul>
	</div>

	<div class="card">
		<h2 class="card-title">Meine Qualifikationen</h2>
		<div class="table-wrapper"
			style="max-height: 400px; overflow-y: auto;">
			<table class="data-table">
				<thead>
					<tr>
						<th>Lehrgang</th>
						<th>Status</th>
					</tr>
				</thead>
				<tbody>
					<c:if test="${empty qualifications}">
						<tr>
							<td colspan="2">Keine Qualifikationen erworben.</td>
						</tr>
					</c:if>
					<c:forEach var="qual" items="${qualifications}">
						<tr>
							<td><c:out value="${qual.courseName}" /></td>
							<td><c:out value="${qual.status}" /></td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
		</div>
	</div>
</div>

<div class="card">
	<h2 class="card-title">Meine Event-Historie</h2>
	<div class="table-wrapper" style="max-height: 500px; overflow-y: auto;">
		<table class="data-table">
			<thead>
				<tr>
					<th>Event</th>
					<th>Datum</th>
					<th>Dein Status</th>
					<th>Feedback</th>
				</tr>
			</thead>
			<tbody>
				<c:if test="${empty eventHistory}">
					<tr>
						<td colspan="4">Keine Event-Historie vorhanden.</td>
					</tr>
				</c:if>
				<c:forEach var="event" items="${eventHistory}">
					<tr>
						<td><a
							href="${pageContext.request.contextPath}/events/details?id=${event.id}"><c:out
									value="${event.name}" /></a></td>
						<td><c:out value="${event.formattedEventDateTime}" /> Uhr</td>
						<td><c:out value="${event.userAttendanceStatus}" /></td>
						<td><c:if
								test="${event.status == 'ABGESCHLOSSEN' && event.userAttendanceStatus == 'ZUGEWIESEN'}">
								<a
									href="${pageContext.request.contextPath}/feedback?action=submit&eventId=${event.id}"
									class="btn btn-small">Feedback geben</a>
							</c:if></td>
					</tr>
				</c:forEach>
			</tbody>
		</table>
	</div>
</div>

<c:import url="../../jspf/main_footer.jspf" />

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\qr_action.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<!DOCTYPE html>
<html lang="de">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lager-Aktion</title>
<link rel="stylesheet"
	href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet"
	href="${pageContext.request.contextPath}/css/style.css">
<style>
body {
	display: flex;
	justify-content: center;
	align-items: center;
	min-height: 100vh;
}

.action-container {
	text-align: center;
	width: 90%;
	max-width: 400px;
}

.item-name {
	font-size: 1.5rem;
	font-weight: bold;
	margin-bottom: 2rem;
}

.action-buttons {
	display: grid;
	grid-template-columns: 1fr;
	gap: 1rem;
}

.action-btn {
	font-size: 1.2rem;
	padding: 1.5rem;
}
</style>
</head>
<body>
	<div class="action-container card">
		<p>Aktion für:</p>
		<h1 class="item-name">
			<c:out value="${item.name}" />
		</h1>
		<form action="${pageContext.request.contextPath}/storage-transaction"
			method="post">
			<input type="hidden" name="itemId" value="${item.id}"> <input
				type="hidden" name="quantity" value="1"> <input
				type="hidden" name="redirectUrl"
				value="${pageContext.request.contextPath}/storage-item-action?id=${item.id}">

			<div class="form-group">
				<label for="notes">Notiz (optional)</label> <input type="text"
					name="notes" id="notes" placeholder="z.B. für Event XYZ">
			</div>
			<div class="form-group">
				<label for="eventId">Zuweisen zu Event (optional)</label> <select
					name="eventId" id="eventId">
					<option value="">Kein Event</option>
					<c:forEach var="event" items="${activeEvents}">
						<option value="${event.id}">${event.name}</option>
					</c:forEach>
				</select>
			</div>

			<div class="action-buttons">
				<button type="submit" name="type" value="checkout"
					class="btn btn-danger action-btn"
					${item.availableQuantity <= 0 ? 'disabled' : ''}>
					<i class="fas fa-sign-out-alt"></i> 1 Stk. Entnehmen
				</button>
				<button type="submit" name="type" value="checkin"
					class="btn btn-success action-btn">
					<i class="fas fa-sign-in-alt"></i> 1 Stk. Einräumen
				</button>
			</div>
		</form>
		<c:if test="${not empty sessionScope.successMessage}">
			<p class="success-message" style="margin-top: 1rem;">${sessionScope.successMessage}</p>
			<c:remove var="successMessage" scope="session" />
		</c:if>
		<c:if test="${not empty sessionScope.errorMessage}">
			<p class="error-message" style="margin-top: 1rem;">${sessionScope.errorMessage}</p>
			<c:remove var="errorMessage" scope="session" />
		</c:if>
	</div>
</body>
</html>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\views\public\storage_item_details.jsp
========================================================================

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
	isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:import url="../../jspf/header.jspf">
	<c:param name="pageTitle" value="Artikeldetails: ${item.name}" />
</c:import>

<h1>
	<i class="fas fa-cube"></i> Artikeldetails
</h1>

<div class="dashboard-grid"
	style="grid-template-columns: 1fr 2fr; align-items: flex-start;">

	<div class="card">
		<h2 class="card-title">${item.name}</h2>
		<c:if test="${not empty item.imagePath}">
			<a href="#" class="lightbox-trigger"><img
				src="${pageContext.request.contextPath}/image?file=${item.imagePath}"
				alt="${item.name}"
				style="width: 100%; border-radius: var(--border-radius); margin-bottom: 1rem; cursor: zoom-in;"></a>
		</c:if>
		<ul class="details-list">
			<li><strong>Allg. Status:</strong> <span
				class="status-badge ${item.availabilityStatusCssClass}">${item.availabilityStatus}</span></li>
			<li><strong>Verfügbar:</strong> ${item.availableQuantity} /
				${item.quantity}</li>
			<li><strong>Defekt:</strong> ${item.defectiveQuantity}</li>
			<li><strong>Tracking-Status:</strong> <c:choose>
					<c:when test="${item.status == 'CHECKED_OUT'}">
						<span class="status-badge status-warn">Entnommen</span>
					</c:when>
					<c:when test="${item.status == 'MAINTENANCE'}">
						<span class="status-badge status-info">Wartung</span>
					</c:when>
					<c:otherwise>
						<span class="status-badge status-ok">Im Lager</span>
					</c:otherwise>
				</c:choose></li>
			<c:if test="${not empty item.currentHolderUsername}">
				<li><strong>Aktueller Inhaber:</strong>
					${item.currentHolderUsername}</li>
			</c:if>
			<li><strong>Ort:</strong> ${item.location}</li>
			<li><strong>Schrank:</strong> ${not empty item.cabinet ? item.cabinet : 'N/A'}</li>
			<li><strong>Fach:</strong> ${not empty item.compartment ? item.compartment : 'N/A'}</li>
		</ul>
		<div style="margin-top: 2rem;">
			<a href="<c:url value='/lager'/>" class="btn btn-small"><i
				class="fas fa-arrow-left"></i> Zur Lagerübersicht</a>
		</div>
	</div>

	<div class="card">
		<h2 class="card-title">
			<i class="fas fa-history"></i> Verlauf / Chronik
		</h2>
		<div class="table-wrapper" style="max-height: 60vh; overflow-y: auto;">
			<table class="data-table">
				<thead>
					<tr>
						<th>Wann</th>
						<th>Aktion</th>
						<th>Wer</th>
						<th>Notiz</th>
					</tr>
				</thead>
				<tbody>
					<c:if test="${empty history}">
						<tr>
							<td colspan="4" style="text-align: center;">Kein Verlauf für
								diesen Artikel vorhanden.</td>
						</tr>
					</c:if>
					<c:forEach var="entry" items="${history}">
						<tr>
							<td>${entry.transactionTimestampLocaleString}</td>
							<td><span
								class="status-badge ${entry.quantityChange > 0 ? 'status-ok' : 'status-danger'}">${entry.quantityChange > 0 ? '+' : ''}${entry.quantityChange}</span></td>
							<td>${entry.username}</td>
							<td>${not empty entry.notes ? entry.notes : '-'}</td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
		</div>
	</div>
</div>

<div id="lightbox" class="lightbox-overlay">
	<span class="lightbox-close">×</span><img class="lightbox-content"
		id="lightbox-image">
</div>

<c:import url="/WEB-INF/jspf/footer.jspf" />

<script>
document.addEventListener('DOMContentLoaded', () => {
    const lightbox = document.getElementById('lightbox');
    const lightboxImage = document.getElementById('lightbox-image');
    const closeBtn = document.querySelector('.lightbox-close');

    document.querySelectorAll('.lightbox-trigger').forEach(trigger => {
        trigger.addEventListener('click', (e) => {
            e.preventDefault();
            lightbox.style.display = 'block';
            lightboxImage.src = trigger.querySelector('img').src;
        });
    });

    if (closeBtn) closeBtn.addEventListener('click', () => { lightbox.style.display = 'none'; });
});
</script>

========================================================================
FILE: C:\Users\techn\eclipse\workspace\TechnikTeam\src\main\webapp\WEB-INF\web.xml
========================================================================

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"
	version="5.0">

	<display-name>TechnikTeam Web Application</display-name>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>/WEB-INF/views/auth/login.jsp</welcome-file>
	</welcome-file-list>

	<jsp-config>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<url-pattern>*.jspf</url-pattern>
			<el-ignored>false</el-ignored>
		</jsp-property-group>
	</jsp-config>

	<!-- Custom Error Pages -->
	<error-page>
		<error-code>400</error-code>
		<location>/WEB-INF/views/error/error400.jsp</location>
	</error-page>
	<error-page>
		<error-code>401</error-code>
		<location>/WEB-INF/views/error/error401.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/WEB-INF/views/error/error403.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/error/error404.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/views/error/error500.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/views/error/error500.jsp</location>
	</error-page>

</web-app>
